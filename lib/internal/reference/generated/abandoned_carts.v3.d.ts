/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */
export interface paths {
    readonly "/abandoned-carts/{token}": {
        /**
         * Returns the `cart_id` corresponding to the abandoned cart `{token}` passed in.
         *
         * **Usage Notes**:
         * * `{token}` is the token in the query string of the abandoned cart link found in abandoned cart email notifications to shoppers
         */
        readonly get: operations["getAbandonedCarts"];
        readonly parameters: {
            readonly path: {
                /**
                 * Unique cart `UUID`.
                 *
                 * Unique cart `UUID` token that is generated for abandoned cart emails.
                 */
                readonly token: string;
            };
        };
    };
}
export interface definitions {
    readonly metaEmpty_Full: {
        readonly [key: string]: any;
    };
    readonly error_Full: {
        /** The HTTP status code. */
        readonly status?: number;
        /** The error title describing the particular error. */
        readonly title?: string;
        readonly type?: string;
    };
    readonly errorDetailed_Full: {
        readonly errors?: {
            readonly [key: string]: string;
        };
    };
    readonly abandonedCartInfo_Full: {
        /** The `cart_id` of the abandoned cart. Can be used to display the abanded cart to the customer via storefront cart or */
        readonly cart_id?: string;
    };
}
export interface parameters {
    /** Accept */
    readonly Accept: string;
    /** Content-Type */
    readonly "Content-Type": string;
}
export interface responses {
    /** If something happens during the request that causes it to fail, a 502 response will be returned. A new request should be made; however, it could fail. */
    readonly "502_GatewayError": {
        readonly schema: definitions["error_Full"];
    };
    /** If this occurs, you should retry the request. Typically retrying the request several times will result in a successful request; However, if you are unable to successfully make a request, please check the BigCommerce system status [here](https://status.bigcommerce.com/). A service is likely down and the request will need to be made again when it is back up (in several hours usually) */
    readonly "504_GatewayTimeout": {
        readonly schema: definitions["errorDetailed_Full"];
    };
    readonly "403_Unauthorized": {
        readonly schema: definitions["error_Full"];
    };
    /**
     * Malformed request syntax. Typically need to fix the JSON
     * Body to resend successfully.
     */
    readonly "400_BadRequest": {
        readonly schema: definitions["error_Full"];
    };
    /** If the requested account resource is not found for the franchise, return a 404 Not Found. */
    readonly "404_NotFound": {
        readonly schema: definitions["error_Full"];
    };
    /** This occurs when missing or unacceptable data is passed for one or more fields. Please correct the values for the fields listed in the errors object. */
    readonly "422_UnprocessableEntity": {
        readonly schema: definitions["errorDetailed_Full"];
    };
    /** If this occurs, you should retry the request. If you are unable to successfully make a request, please check the BigCommerce system status [here](https://status.bigcommerce.com/). A service is likely down and the request will need to be made again when it is back up (in several hours usually) */
    readonly "503_ServiceUnavailable": {
        readonly schema: definitions["error_Full"];
    };
    /** Returned on `GET` requests to `/abandoned_carts`. */
    readonly abandonedCart_Resp: {
        readonly schema: {
            readonly data?: definitions["abandonedCartInfo_Full"];
            readonly meta?: definitions["metaEmpty_Full"];
        };
    };
}
export interface operations {
    /**
     * Returns the `cart_id` corresponding to the abandoned cart `{token}` passed in.
     *
     * **Usage Notes**:
     * * `{token}` is the token in the query string of the abandoned cart link found in abandoned cart email notifications to shoppers
     */
    readonly getAbandonedCarts: {
        readonly parameters: {
            readonly path: {
                /**
                 * Unique cart `UUID`.
                 *
                 * Unique cart `UUID` token that is generated for abandoned cart emails.
                 */
                readonly token: string;
            };
        };
        readonly responses: {
            readonly 200: responses["abandonedCart_Resp"];
            readonly 400: responses["400_BadRequest"];
            readonly 404: responses["404_NotFound"];
            readonly 422: responses["422_UnprocessableEntity"];
            readonly 502: responses["502_GatewayError"];
            readonly 503: responses["503_ServiceUnavailable"];
            readonly 504: responses["504_GatewayTimeout"];
            readonly default: unknown;
        };
    };
}
