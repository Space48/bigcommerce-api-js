/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */
export interface paths {
    readonly "/shipping/zones": {
        /** Returns a list of all *Shipping Zones*. */
        readonly get: operations["getAllShippingZones"];
        /**
         * Creates a *Shipping Zone*.
         *
         * **Required Fields**
         * * name
         */
        readonly post: operations["createAShippingZones"];
    };
    readonly "/shipping/zones/{id}": {
        /** Returns a single *Shipping Zone*. */
        readonly get: operations["getAShippingZone"];
        /**
         * Updates a *Shipping Zone*.
         *
         * **Required Fields**
         * * name
         *
         * **Read Only Fields**
         * * id
         */
        readonly put: operations["updateAShippingZone"];
        /** Deletes a *Shipping Zone*. */
        readonly delete: operations["deleteAShippingZone"];
    };
    readonly "/shipping/zones/{zone_id}/methods": {
        /** Returns a list of *Shipping Methods* in a zone. Default sorting is by shipping-method id, from lowest to highest. */
        readonly get: operations["getShippingMethodsZone"];
        /**
         * Creates a *Shipping Method* within a shipping zone. Real Time Carrier Connections are also supported by this endpoint.
         *
         * ## Carrier Configurations – Current
         *
         * This section provides a sample request and a carrier-specific object/property model, for each supported carrier.
         *
         * ### USPS by Endicia
         *
         * #### Sample Request
         *
         *
         * ```json
         * {
         *     "name": "USPS by Endicia",
         *     "type": "endicia",
         *     "settings": {
         *         "carrier_options": {
         *             "delivery_services" : ["PriorityExpress","Priority", "PriorityMailExpressInternational"],
         * 			"packaging_type" : "LargeFlatRateBox",
         *             "show_transit_time" : true
         *         }
         *     },
         *     "enabled": true
         * }
         * ```
         *
         * ### USPS by Endicia Object Properties
         *
         * | Property | Type | Values |
         * | - | - | - |
         * | delivery_services | array | PriorityExpress <br> PriorityMailExpressInternational <br> FirstClassPackageInternationalService <br> Priority <br> PriorityMailInternational <br> First <br> ParcelSelect <br> MediaMail |
         * | packaging_type | array | FlatRateLegalEnvelope <br> FlatRatePaddedEnvelope <br> Parcel <br> SmallFlatRateBox <br> MediumFlatRateBox <br> LargeFlatRateBox <br> FlatRateEnvelope <br> RegionalRateBoxA <br> RegionalRateBoxB |
         * |show_transit_time | boolean | true <br> false |
         *
         *
         * ### FedEx
         *
         * #### Sample Request
         *
         * ```json
         * {
         *     "name": "FEDEX",
         *     "type": "fedex",
         *     "settings": {
         *         "carrier_options": {
         *             "delivery_services": [
         *                 "PRIORITY_OVERNIGHT",
         * 				"FEDEX_2_DAY"
         *             ],
         *             "dropoff_type": "REGULAR_PICKUP",
         *             "packaging_type": "FEDEX_ENVELOPE",
         *             "packing_method": "SEPARATE",
         *             "rate_type": "NONE",
         *             "include_package_value": true,
         *             "destination_type": "residential"
         *         }
         *     },
         *     "enabled": true
         * }
         * ```
         *
         * #### FedEx Object Properties
         *
         * | Property | Type | Values |
         * | - | - | - |
         * | delivery_services | array | PRIORITY_OVERNIGHT <br> STANDARD_OVERNIGHT <br> FIRST_OVERNIGHT <br> FEDEX_2_DAY <br> FEDEX_EXPRESS_SAVER <br> INTERNATIONAL_PRIORITY <br> INTERNATIONAL_ECONOMY <br> INTERNATIONAL_FIRST <br> FEDEX_1_DAY_FREIGHT <br> FEDEX_2_DAY_FREIGHT <br> FEDEX_3_DAY_FREIGHT <br> FEDEX_GROUND <br> GROUND_HOME_DELIVERY <br> INTERNATIONAL_PRIORITY_FREIGHT <br> INTERNATIONAL_ECONOMY_FREIGHT <br> EUROPE_FIRST_INTERNATIONAL_PRIORITY |
         * | dropoff_type | string | REGULAR_PICKUP <br> REQUEST_COURIER <br> DROP_BOX <br> BUSINESS_SERVICE_CENTER <br> STATION |
         * | packaging_type | string | FEDEX_ENVELOPE  <br> FEDEX_PAK <br> FEDEX_BOX <br> FEDEX_TUBE <br> FEDEX_10KG_BOX <br> FEDEX_25KG_BOX <br> YOUR_PACKAGING |
         * | packing_method | string | SEPARATE <br> COMBINED |
         * | rate_type | string | NONE <br> LIST |
         * | include_package_value | boolean | true <br> false |
         * | destination_type | string | residential <br> business |
         *
         * ### UPS Ready
         *
         * #### Sample Request
         *
         * ```json
         * {
         *     "name": "UPS ready",
         *     "type": "upsready",
         *     "settings": {
         *         "carrier_options": {
         *             "delivery_services": [
         *                 "2nd_Day_Air","Standard"
         *             ],
         *             "packaging_type": "21",
         *             "packing_method": "separate",
         *             "include_package_value": true,
         *             "destination_type": "residential",
         *             "show_transit_time" : true
         *         }
         *     },
         *     "enabled": true
         * }
         * ```
         *
         * #### UPS Ready Object Properties
         *
         * | Property | Type | Values |
         * | - | - | - |
         * | delivery_services | array | 2nd_Day_Air <br> 2nd_Day_Air_AM <br> 3_Day_Select <br> Expedited  <br> Express <br> Express_Plus <br> Express_Saver <br> Express_Early_AM <br> Ground <br> Next_Day_Air  <br> Next_Day_Air_Early_AM <br> Next_Day_Air_Saver <br> Saver <br> Standard <br> Today_Dedicated_Courier <br> Today_Express <br> Today_Express_Saver <br> Today_Intercity <br> Today_Standard <br> Worldwide_Expedited <br> Worldwide_Express <br> Worldwide_Express_Plus <br> Worldwide_Express_Saver <br> Worldwide_Saver |
         * | destination_type | string | residential <br> business |
         * | packing_method | string | separate <br> combined |
         * | packaging_type | string (only codes allowed) | 21: UPS® Express Box <br> 24: UPS® 25 KG Box <br> 25: UPS® 10 KG Box <br> 30: Pallet <br> 01: UPS® Letter <br> 02: Customer Supplied Package <br> 03: Tube <br> 04: PAK <br> 2a: Small Express Box <br> 2b: Medium Express Box <br> 2c: Large Express Box |
         * | include_package_value | boolean | true <br> false |
         * | show_transit_time | boolean | true <br> false |
         *
         * ### Canada Post
         *
         * #### Sample Request
         *
         * ```json
         * {
         *     "name": "Canada Post",
         *     "type": "canadapost",
         *     "settings": {
         *         "carrier_options": {
         *             "delivery_services": [
         *                 "DOM.RP","DOM.EP"
         *             ]
         *         }
         *     },
         *     "enabled": true
         * }
         * ```
         *
         * #### Canada Post Object Properties
         *
         * | Property | Type | Values |
         * | - | - | - |
         * | delivery_services | array | DOM.RP <br> DOM.EP <br> DOM.XP <br> DOM.XP.CERT <br> DOM.PC DOM.LIB <br> USA.EP <br> USA.PW.ENV <br> USA.PW.PAK <br> USA.PW.PARCEL <br> USA.SP.AIR <br> USA.TP <br> USA.TP.LVM <br> USA.XP <br> INT.XP <br> INT.IP.AIR <br> INT.IP.SURF <br> INT.PW.ENV <br> INT.PW.PAK <br> INT.PW.PARCEL <br> INT.SP.AIR <br> INT.SP.SURF <br> INT.TP |
         *
         * ### Australia Post
         *
         * ```json
         * {
         *     "name": "Australia Post",
         *     "type": "auspost",
         *     "settings": {
         *         "carrier_options": {
         *             "delivery_services": [
         *                 "AUS_PARCEL_REGULAR",
         * 				"AUS_PARCEL_EXPRESS"
         *             ]
         *         }
         *     },
         *     "enabled": true
         * }
         * ```
         *
         * #### Australia Post Object Properties
         *
         * | Property | Type | Values |
         * | - | - | - |
         * | delivery_services | array | AUS_LETTER_REGULAR_SMALL <br> AUS_LETTER_REGULAR_Large <br> AUS_LETTER_EXPRESS_SMALL <br> AUS_LETTER_EXPRESS_MEDIUM <br> AUS_LETTER_EXPRESS_LARGE <br> AUS_PARCEL_REGULAR <br> AUS_PARCEL_REGULAR_SATCHEL_500G <br> AUS_PARCEL_REGULAR_SATCHEL_3KG <br> AUS_PARCEL_REGULAR_SATCHEL_5KG <br> AUS_PARCEL_EXPRESS <br> AUS_PARCEL_EXPRESS_SATCHEL_500G <br> AUS_PARCEL_EXPRESS_SATCHEL_3KG <br> AUS_PARCEL_EXPRESS_SATCHEL_5KG <br> AUS_PARCEL_COURIER <br> AUS_PARCEL_COURIER_SATCHEL_MEDIUM <br> INT_PARCEL_COR_OWN_PACKAGING <br> INT_PARCEL_EXP_OWN_PACKAGING <br> INT_PARCEL_STD_OWN_PACKAGING <br> INT_PARCEL_AIR_OWN_PACKAGING <br> INT_PARCEL_SEA_OWN_PACKAGING |
         *
         * ### Royal Mail
         *
         * #### Sample Request
         *
         * ```json
         * {
         *     "name": "Royal Mail",
         *     "type": "royalmail",
         *     "settings": {
         *         "carrier_options": {
         *             "delivery_services": [
         *                 "StandardFirstClass",
         * 				"StandardSecondClass"
         *             ]
         *         }
         *     },
         *     "enabled": true
         * }
         * ```
         *
         * #### Royal Mail Object Properties
         *
         * | Property | Type | Values |
         * | - | - | - |
         * | delivery_services | array | SpecialDelivery1pm <br> SpecialDelivery9am <br> SpecialDelivery1pmSaturday <br> SpecialDelivery9amSaturday <br> SignedForFirstClass <br> SignedForSecondClass <br> Express9 <br> Express10 <br> ExpressAM <br> Express24 <br> Express48 <br> StandardFirstClass <br> StandardSecondClass <br> InternationalStandard <br> InternationalTracked <br> InternationalEconomy |
         *
         * ### Zoom2U
         *
         * #### Sample Request
         *
         * ```json
         * {
         *     "name": "Zoom2U",
         *     "type": "zoom2u",
         *     "settings": {
         *         "carrier_options": {
         *             "delivery_services": [
         *                 "3_hour",
         * 				"Same_day",
         * 				"VIP"
         *             ]
         *         }
         *     },
         *     "enabled": true
         * }
         * ```
         *
         * #### Zoom2U Object Properties
         *
         * | Property | Type | Values |
         * | - | - | - |
         * | delivery_services | array | 3_hour <br> Same_day <br> VIP|
         *
         *
         * ### Settings Objects
         *
         * A shipping method's `type` and `settings` properties can match one of the following models:
         *
         * ### perorder Object – Properties
         *
         * Object model for flat-rate shipping quotes per order.
         *
         * | Name | Type | Description |
         * | - | - | - |
         * | rate | number | Flat rate per order. |
         *
         * #### JSON Example
         *
         * ```json
         * {
         * 	"name": "Flat Rate per Order",
         * 	"type": "perorder",
         * 	"settings": {
         * 		"rate": 7
         * 	}
         * },
         * ```
         *
         * ### peritem Object – Properties
         *
         * Object model for flat-rate shipping quotes per item ordered.
         *
         * | Name | Type | Description |
         * | - | - | - |
         * | rate | number | Flat rate per item. |
         *
         * #### JSON Example
         *
         * ```json
         * {
         * 	"name": "Flat Rate per Item",
         * 	"type": "peritem",
         * 	"settings": {
         * 		"rate": 8
         * 	}
         * },
         * ```
         *
         * ### weight Object – Properties
         *
         * Object model for shipping quotes by weight.
         *
         * | Name | Type | Description |
         * | - | - | - |
         * | default_cost | number | Default shipping cost, applied either as a percentage of the order's total value or as a fixed amount. |
         * | default_cost_type | string | How the default shipping cost is calculated. One of: `percentage_of_total` or `fixed_amount`. |
         * | range | number | Array of [range](#range) objects. The units for these ranges' `lower_limit` and `upper_limit` properties depend on the default units set in the store's control panel. |
         *
         *
         * #### JSON Example
         *
         * ```json
         * {
         * 	"name": "Rate per Weight",
         * 	"type": "weight",
         * 	"settings": {
         * 		"default_cost": 12,
         * 		"default_cost_type": "fixed_amount",
         * 		"range": [
         * 			{
         * 				"lower_limit": 0,
         * 				"upper_limit": 20,
         * 				"shipping_cost": 8
         * 			},
         * 			{
         * 				"lower_limit": 20,
         * 				"upper_limit": 40,
         * 				"shipping_cost": 12
         * 			}
         * 		]
         * 	}
         * }
         * ```
         *
         * ### total Object – Properties
         *
         * Object model for shipping quotes by order's total value.
         *
         * | Name | Type | Description |
         * | - | - | - |
         * | default_cost | number | Default shipping cost, applied either as a percentage of the order's total value or as a fixed amount. |
         * | default_cost_type | string | How the default shipping cost is calculated. One of: `percentage_of_total` or `fixed_amount`. |
         * | include_order_total_taxes | boolean | Whether or not to include taxes on the order's total value in the shipping-cost calculation. |
         * | range | number | Array of [range](#range) objects. The units for these ranges' `lower_limit` and `upper_limit` properties are values in the store's currency. |
         *
         * #### JSON Example
         *
         * This example sets free shipping above a certain order total:
         *
         * ```json
         * {
         * 	"name": "Per Total or Free",
         * 	"type": "total",
         * 	"settings": {
         * 		"default_cost": 12,
         * 		"default_cost_type": "fixed_amount",
         * 		"include_order_total_taxes": 0,
         * 		"range": [
         * 			{
         * 				"lower_limit": 0,
         * 				"upper_limit": 5,
         * 				"shipping_cost": 5
         * 			},
         * 			{
         * 				"lower_limit": 5,
         * 				"upper_limit": 10,
         * 				"shipping_cost": 8
         * 			},
         * 			{
         * 				"lower_limit": 10,
         * 				"upper_limit": 20,
         * 				"shipping_cost": 10
         * 			},
         * 			{
         * 				"lower_limit": 20,
         * 				"upper_limit": 49.99,
         * 				"shipping_cost": 15
         * 			},
         * 			{
         * 				"lower_limit": 50,
         * 				"upper_limit": 100000,
         * 				"shipping_cost": 0
         * 			}
         * 		]
         * 	}
         * }
         * ```
         *
         * ### Range Object – Properties
         *
         * Object model to define ranges for shipping quotes. Units are defined in the parent object.
         *
         * | Name | Type | Description |
         * | - | - | - |
         * | lower_limit | number | Lower limit for order total. |
         * | upper_limit | number | Upper limit for order total. |
         * | shipping_cost | number | Shipping cost for orders whose total falls between the lower and upper limits. |
         *
         * #### JSON Example
         *
         * ```json
         * {
         * 	"lower_limit": 0,
         * 	"upper_limit": 20,
         * 	"shipping_cost": 8
         * }
         * ```
         */
        readonly post: operations["createAShippingMethod"];
    };
    readonly "/shipping/zones/{zone_id}/methods/{method_id}": {
        /**
         * Returns a single *Shipping Method* in a zone. Real Time Carrier Connections are also supported by this endpoint.
         *
         * ### Settings Objects
         *
         * A shipping method's `type` and `settings` properties can match one of the following models:
         *
         * ### perorder Object – Properties
         *
         * Object model for flat-rate shipping quotes per order.
         *
         * | Name | Type | Description |
         * | - | - | - |
         * | rate | number | Flat rate per order. |
         *
         * #### JSON Example
         *
         * ```json
         * {
         *     "name": "Flat Rate per Order",
         *     "type": "perorder",
         *     "settings": {
         *         "rate": 7
         * },
         * ```
         *
         * ### peritem Object – Properties
         *
         * Object model for flat-rate shipping quotes per item ordered.
         *
         * | Name | Type | Description |
         * | - | - | - |
         * | rate | number | Flat rate per item. |
         *
         * #### JSON Example
         *
         * ```json
         * {
         *     "name": "Flat Rate per Item",
         *     "type": "peritem",
         *     "settings": {
         *         "rate": 8
         * },
         * ```
         *
         * ### weight Object – Properties
         *
         * Object model for shipping quotes by weight.
         *
         * | Name | Type | Description |
         * | - | - | - |
         * | default_cost | number | Default shipping cost, applied either as a percentage of the order's total value or as a fixed amount. |
         * | default_cost_type | string | How the default shipping cost is calculated. One of: `percentage_of_total` or `fixed_amount`. |
         * | range | number | Array of [range](#range) objects. The units for these ranges' `lower_limit` and `upper_limit` properties depend on the default units set in the store's control panel. |
         *
         *
         * #### JSON Example
         * ```json
         * {
         *     "name": "Rate per Weight",
         *     "type": "weight",
         *     "settings": {
         *         "default_cost": 12,
         *         "default_cost_type": "fixed_amount",
         *         "range": [
         *             {
         *                 "lower_limit": 0,
         *                 "upper_limit": 20,
         *                 "shipping_cost": 8
         *             },
         *             {
         *                 "lower_limit": 20,
         *                 "upper_limit": 40,
         *                 "shipping_cost": 12
         *             }
         *         ]
         *     }
         * }
         * ```
         *
         * ### total Object – Properties
         *
         * Object model for shipping quotes by order's total value.
         *
         * | Name | Type | Description |
         * | - | - | - |
         * | default_cost | number | Default shipping cost, applied either as a percentage of the order's total value or as a fixed amount. |
         * | default_cost_type | string | How the default shipping cost is calculated. One of: `percentage_of_total` or `fixed_amount`. |
         * | include_order_total_taxes | boolean | Whether or not to include taxes on the order's total value in the shipping-cost calculation. |
         * | range | number | Array of [range](#range) objects. The units for these ranges' `lower_limit` and `upper_limit` properties are values in the store's currency. |
         *
         * #### JSON Example
         *
         * This example sets free shipping above a certain order total:
         *
         * ```json
         * {
         *     "name": "Per Total or Free",
         *     "type": "total",
         *     "settings": {
         *         "default_cost": 12,
         *         "default_cost_type": "fixed_amount",
         *         "include_order_total_taxes": 0,
         *         "range": [
         *             {
         *                 "lower_limit": 0,
         *                 "upper_limit": 5,
         *                 "shipping_cost": 5
         *             },
         *             {
         *                 "lower_limit": 5,
         *                 "upper_limit": 10,
         *                 "shipping_cost": 8
         *             },
         *             {
         *                 "lower_limit": 10,
         *                 "upper_limit": 20,
         *                 "shipping_cost": 10
         *             },
         *             {
         *                 "lower_limit": 20,
         *                 "upper_limit": 49.99,
         *                 "shipping_cost": 15
         *             },
         *             {
         *                 "lower_limit": 50,
         *                 "upper_limit": 100000,
         *                 "shipping_cost": 0
         *             }
         *         ]
         *     }
         * }
         * ```
         *
         * ### Range Object – Properties
         *
         * Object model to define ranges for shipping quotes. Units are defined in the parent object.
         *
         * | Name | Type | Description |
         * | - | - | - |
         * | lower_limit | number | Lower limit for order total. |
         * | upper_limit | number | Upper limit for order total. |
         * | shipping_cost | number | Shipping cost for orders whose total falls between the lower and upper limits. |
         *
         * #### JSON Example
         *
         * ```json
         * {
         *     "lower_limit": 0,
         *     "upper_limit": 20,
         *     "shipping_cost": 8
         * }
         * ```
         */
        readonly get: operations["getAShippingMethod"];
        /**
         * Updates a *Shipping Method* in a zone. Real Time Carrier Connections are also supported by this endpoint.
         *
         * **Read Only Fields**
         * * id
         *
         * ### Settings Objects
         *
         * A shipping method's `type` and `settings` properties can match one of the following models:
         *
         * ### perorder Object – Properties
         *
         * Object model for flat-rate shipping quotes per order.
         *
         * | Name | Type | Description |
         * | - | - | - |
         * | rate | number | Flat rate per order. |
         *
         * #### JSON Example
         *
         * ```json
         * {
         * 	"name": "Flat Rate per Order",
         * 	"type": "perorder",
         * 	"settings": {
         * 		"rate": 7
         * 	}
         * },
         * ```
         *
         * ### peritem Object – Properties
         *
         * Object model for flat-rate shipping quotes per item ordered.
         *
         * | Name | Type | Description |
         * | - | - | - |
         * | rate | number | Flat rate per item. |
         *
         * #### JSON Example
         *
         * ```json
         * {
         * 	"name": "Flat Rate per Item",
         * 	"type": "peritem",
         * 	"settings": {
         * 		"rate": 8
         * 	}
         * },
         * ```
         *
         * ### weight Object – Properties
         *
         * Object model for shipping quotes by weight.
         *
         * | Name | Type | Description |
         * | - | - | - |
         * | default_cost | number | Default shipping cost, applied either as a percentage of the order's total value or as a fixed amount. |
         * | default_cost_type | string | How the default shipping cost is calculated. One of: `percentage_of_total` or `fixed_amount`. |
         * | range | number | Array of [range](#range) objects. The units for these ranges' `lower_limit` and `upper_limit` properties depend on the default units set in the store's control panel. |
         *
         *
         * #### JSON Example
         *
         * ```json
         * {
         * 	"name": "Rate per Weight",
         * 	"type": "weight",
         * 	"settings": {
         * 		"default_cost": 12,
         * 		"default_cost_type": "fixed_amount",
         * 		"range": [
         * 			{
         * 				"lower_limit": 0,
         * 				"upper_limit": 20,
         * 				"shipping_cost": 8
         * 			},
         * 			{
         * 				"lower_limit": 20,
         * 				"upper_limit": 40,
         * 				"shipping_cost": 12
         * 			}
         * 		]
         * 	}
         * }
         * ```
         *
         * ### total Object – Properties
         *
         * Object model for shipping quotes by order's total value.
         *
         * | Name | Type | Description |
         * | - | - | - |
         * | default_cost | number | Default shipping cost, applied either as a percentage of the order's total value or as a fixed amount. |
         * | default_cost_type | string | How the default shipping cost is calculated. One of: `percentage_of_total` or `fixed_amount`. |
         * | include_order_total_taxes | boolean | Whether or not to include taxes on the order's total value in the shipping-cost calculation. |
         * | range | number | Array of [range](#range) objects. The units for these ranges' `lower_limit` and `upper_limit` properties are values in the store's currency. |
         *
         * #### JSON Example
         *
         * This example sets free shipping above a certain order total:
         *
         * ```json
         * {
         * 	"name": "Per Total or Free",
         * 	"type": "total",
         * 	"settings": {
         * 		"default_cost": 12,
         * 		"default_cost_type": "fixed_amount",
         * 		"include_order_total_taxes": 0,
         * 		"range": [
         * 			{
         * 				"lower_limit": 0,
         * 				"upper_limit": 5,
         * 				"shipping_cost": 5
         * 			},
         * 			{
         * 				"lower_limit": 5,
         * 				"upper_limit": 10,
         * 				"shipping_cost": 8
         * 			},
         * 			{
         * 				"lower_limit": 10,
         * 				"upper_limit": 20,
         * 				"shipping_cost": 10
         * 			},
         * 			{
         * 				"lower_limit": 20,
         * 				"upper_limit": 49.99,
         * 				"shipping_cost": 15
         * 			},
         * 			{
         * 				"lower_limit": 50,
         * 				"upper_limit": 100000,
         * 				"shipping_cost": 0
         * 			}
         * 		]
         * 	}
         * }
         * ```
         *
         * ### Range Object – Properties
         *
         * Object model to define ranges for shipping quotes. Units are defined in the parent object.
         *
         * | Name | Type | Description |
         * | - | - | - |
         * | lower_limit | number | Lower limit for order total. |
         * | upper_limit | number | Upper limit for order total. |
         * | shipping_cost | number | Shipping cost for orders whose total falls between the lower and upper limits. |
         *
         * #### JSON Example
         *
         * ```json
         * {
         * 	"lower_limit": 0,
         * 	"upper_limit": 20,
         * 	"shipping_cost": 8
         * }
         * ```
         */
        readonly put: operations["updateAShippingMethod"];
        /** Deletes an *Shipping Method*. Real Time Carrier Connections can also be deleted. */
        readonly delete: operations["deleteAShippingMethod"];
    };
    readonly "/shipping/carrier/connection": {
        /**
         * Updates a *Carrier Connection*.
         *
         * Updating the carrier connection is done using the same information as creating the connection. This endpoint can be used to update credentials.
         */
        readonly put: operations["updateACarrierConnection"];
        /**
         * Creates a *Carrier Connection*.
         *
         * Carrier connections refer to specific settings required to connect to a specific shipping carrier. Each carrier requires your app to supply a unique set of properties/fields to establish a connection with that carrier.
         *
         * *Notes:*
         *
         * - There is no `GET` with this resource. It has `PUT`, `POST` and `DELETE`.
         *     * `PUT` is used to update. The connection can be updated via API.
         *
         * - Connections created here do not enable the shipping method. To enable the carrier for a shipping zone, use the Shipping Methods API.
         *
         * - The Carrier Connection resource returns a 204 for both succesful and unsuccesful attempts to connect. If a field is missing, it will return a 400.
         *
         * ### Australia Post
         *
         * #### Sample Request – PUT or POST
         *
         * ```json
         * {
         * 	"carrier_id" : "auspost",
         * 	"connection" : {
         * 		"auth_key" : "yourAusPostAuthKey",
         * 		"test_mode" : false
         * 	}
         * }
         * ```
         *
         * #### Sample Request – DELETE
         *
         * ```json
         * {
         * 	"carrier_id" : "auspost"
         * }
         * ```
         *
         * #### Australia Post Connection Object – Properties
         *
         * Australia Post `PUT` or `POST` requests require all of the following properties. (These requests won’t be fulfilled unless these properties are valid.) `DELETE` requests require only a `carrier_id`.
         *
         *
         * | Property | Type | Description
         * | - | - | - |
         * | auth_key | string | Australia Post authorization key. |
         * | test_mode | boolean | Whether or not to use Australia Post test-mode settings. Acceptable values are `true` or `false`. |
         *
         *
         * ### Endicia
         * USPS is connected through Endicia.
         *
         * #### Sample Request – PUT or POST
         *
         * ```json
         * {	"carrier_id" : "endicia",
         * 	"connection": {
         * 		"account_id" : "yourEndiciaAccountId",
         * 		"pass_phrase" : "yourEndiciaPassphrase"
         * 	}
         * }
         * ```
         *
         * #### Sample Request – DELETE
         *
         * ```json
         * {
         * 	"carrier_id" : "endicia"
         * }
         * ```
         *
         * #### Endicia Connection Object – Properties
         *
         * Endicia `PUT` or `POST` requests require all of the following properties. (These requests won’t be fulfilled unless these properties are valid.) `DELETE` requests require only a `carrier_id`.
         *
         *
         * | Property | Type | Description |
         * | - | - | - |
         * | account_id | string | Endicia account ID. |
         * | passphrase | string | Endicia passphrase. |
         *
         *
         * ### FedEx
         *
         * #### Sample Request – PUT or POST
         *
         * ```json
         * {
         * 	"carrier_id" : "fedex",
         * 	"connection" : {
         * 		"key" : "yourFedexKey",
         * 		"password" : "yourFedexPassword",
         * 		"account_number" : "yourFedexAccountNumber",
         * 		"meter_number" : "yourFedexMeterNumber"
         * 	}
         * }
         * ```
         *
         * #### Sample Request – DELETE
         *
         * ```json
         * {
         * 	"carrier_id" : "fedex"
         * }
         * ```
         *
         * #### FedEx Connection Object – Properties
         *
         * FedEx `PUT` or `POST` requests require all of the following properties. (These requests won’t be fulfilled unless these properties are valid.) `DELETE` requests require only a `carrier_id`.
         *
         *
         * | Property | Type | Description |
         * | - | - | - |
         * | key | string | FedEx account ID. |
         * | password | string | FedEx passphrase. |
         * | account_number | string | FedEx account number. |
         * | meter_number | string | FedEx meter number. |
         *
         * ### Royal Mail
         *
         * Sample Request - PUT or POST
         *
         * ```json
         * {
         *     "carrier_id" : "royalmail",
         *     "connection" : {
         *
         *     }
         * }
         * ```
         *
         * Sample Request - DELETE
         *
         * ```json
         * {
         *     "carrier_id" : "royalmail"
         * }
         * ```
         *
         * #### Royal Mail Connection Object - Properties
         *
         * Royal Mail has no connection object properties.
         *
         *
         * ### Zoom2U
         *
         * #### Sample Request – PUT or POST
         *
         * ```json
         * {
         * 	"carrier_id" : "zoom2u",
         * 	"connection" : {
         * 		"auth_key" : "yourZoom2uAuthKey",
         * 		"test_mode" : false
         * 	}
         * }
         * ```
         *
         * #### Sample Request – DELETE
         *
         * ```json
         * {
         * 	"carrier_id" : "zoom2u"
         * }
         * ```
         *
         * #### Zoom2U Connection Object – Properties
         *
         * Zoom2U `PUT` or `POST` requests require all of the following properties. (These requests won’t be fulfilled unless these properties are valid.) `DELETE` requests require only a `carrier_id`.
         *
         *
         * | Property | Type | Description |
         * | - | - | - |
         * | auth_key | string | Zoom2U authorization key. |
         * | test_mode | boolean | Whether or not to use Zoom2U test-mode settings. Acceptable values are `true` or `false`. |
         */
        readonly post: {
            readonly parameters: {
                readonly header: {
                    readonly Accept: string;
                    readonly "Content-Type": string;
                };
                readonly body: {
                    readonly body?: definitions["carrierConnection"];
                };
            };
            readonly responses: {
                /** Returns if request was succesful */
                readonly 204: never;
                /**
                 * If a required field is not provided, the request will return a 400 response.
                 *
                 * [
                 *     {
                 *         "status": 400,
                 *         "message": "Required fields missing [key]"
                 *     }
                 * ]
                 */
                readonly 400: {
                    readonly schema: {
                        readonly [key: string]: any;
                    };
                };
            };
        };
        /**
         * Deletes a *Carrier Connection*.
         *
         * **Required Fields**
         * * carrier_id
         */
        readonly delete: operations["deleteCarrierConnection"];
    };
}
export interface definitions {
    readonly TrackingCarrier: "auspost" | "canadapost" | "endicia" | "usps" | "fedex" | "royalmail" | "ups" | "upsready" | "shipperhq";
    readonly ShippingProvider: "``" | "fedex" | "auspost" | "canadapost" | "endicia" | "usps" | "royalmail" | "ups" | "upsready" | "upsonline" | "shipperhq";
    readonly ShippingZone: {
        /** Zone Id. READ-ONLY */
        readonly id?: number;
        /** Zone name. Required for /PUT */
        readonly name: string;
        readonly type?: "zip" | "country" | "state" | "global";
        /** Array of zone locations. */
        readonly locations?: readonly {
            /** Location’s ID. */
            readonly id?: number;
            /** Location’s ZIP/postal code. */
            readonly zip?: string;
            /** 2-letter ISO Alpha-2 code for the country. */
            readonly country_iso2?: string;
            /** ISO Alpha-2 code for the state. */
            readonly state_iso2?: string;
        }[];
        readonly free_shipping?: {
            readonly enabled?: boolean;
            /** (Float, Float-As-String, Integer) */
            readonly minimum_sub_total?: string;
            readonly exclude_fixed_shipping_products?: boolean;
        };
        readonly handling_fees?: {
            readonly fixed_surcharge?: string;
            readonly percentage_surcharge?: string;
            readonly display_separately?: boolean;
        };
        /** Whether this shipping zone is enabled. */
        readonly enabled?: boolean;
    };
    readonly ShippingZoneLocations: {
        /** Location’s ID. */
        readonly id?: number;
        /** Location’s ZIP/postal code. */
        readonly zip?: string;
        /** 2-letter ISO Alpha-2 code for the country. */
        readonly country_iso2?: string;
        /** ISO Alpha-2 code for the state. */
        readonly state_iso2?: string;
    };
    readonly HandlingFees: {
        readonly fixed_surcharge?: string;
        readonly percentage_surcharge?: string;
        readonly display_separately?: boolean;
    };
    readonly shippingMethod_Full: {
        /** Shipping-method ID. READ-ONLY */
        readonly id?: number;
    } & definitions["shippingMethod_Base"];
    readonly ShippingMethodType: "perorder" | "peritem" | "weight" | "total" | "auspost" | "canadapost" | "endicia" | "usps" | "fedex" | "royalmail" | "upsready";
    readonly shippingMethod_Base: {
        /** Display name for shipping method. */
        readonly name?: string;
        readonly type?: "perorder" | "peritem" | "weight" | "total" | "auspost" | "canadapost" | "endicia" | "usps" | "fedex" | "royalmail" | "upsready";
        /** Depends on the shipping-method type. See the [supported settings object](#supported-settings). */
        readonly settings?: {
            /** Flat rate per order. */
            readonly rate?: number;
        };
        /** Whether or not this shipping-zone method is enabled. */
        readonly enabled?: boolean;
        /**
         * `fixed_surcharge`: flat-rate handling fee applied to shipping cost.
         *
         * `percentage_surcharge`: percentage handling fee applied to shipping cost
         */
        readonly handling_fees?: "fixed_surcharge" | "percentage_surcharge";
        /** Whether or not this shipping zone is the fallback if all others are not valid for the order. */
        readonly is_fallback?: boolean;
    };
    readonly ShippingResponse: {
        readonly [key: string]: any;
    };
    readonly carrierConnection: {
        readonly carrier_id?: string;
        /** `connection` object varies by carrier */
        readonly connection?: {
            readonly [key: string]: any;
        };
    };
    /** Meta data relating to pagination */
    readonly metaCollection: {
        readonly pagination?: {
            /** Total number of items returned. */
            readonly total?: number;
            /** Number of items returned on per page. */
            readonly count?: number;
            /** Number of items to be displayed per page. */
            readonly per_page?: number;
            /** Current page number. */
            readonly current_page?: number;
            /** Total number of pages. */
            readonly total_page?: number;
            readonly links?: {
                /** Query string appended to the resource to return to the previous page. */
                readonly previous?: string;
                /** Query string appended to the resource to proceed to the next page. */
                readonly next?: string;
                /** Query string appended to the resource to show the current page. */
                readonly current?: string;
            };
        };
    };
}
export interface operations {
    /** Returns a list of all *Shipping Zones*. */
    readonly getAllShippingZones: {
        readonly parameters: {
            readonly header: {
                readonly Accept: string;
                readonly "Content-Type": string;
            };
        };
        readonly responses: {
            readonly 200: {
                readonly schema: readonly {
                    /** Zone Id. READ-ONLY */
                    readonly id?: number;
                    /** Zone name. Required for /PUT */
                    readonly name: string;
                    readonly type?: "zip" | "country" | "state" | "global";
                    /** Array of zone locations. */
                    readonly locations?: readonly {
                        /** Location’s ID. */
                        readonly id?: number;
                        /** Location’s ZIP/postal code. */
                        readonly zip?: string;
                        /** 2-letter ISO Alpha-2 code for the country. */
                        readonly country_iso2?: string;
                        /** ISO Alpha-2 code for the state. */
                        readonly state_iso2?: string;
                    }[];
                    readonly free_shipping?: {
                        readonly enabled?: boolean;
                        /** (Float, Float-As-String, Integer) */
                        readonly minimum_sub_total?: string;
                        readonly exclude_fixed_shipping_products?: boolean;
                    };
                    readonly handling_fees?: {
                        readonly fixed_surcharge?: string;
                        readonly percentage_surcharge?: string;
                        readonly display_separately?: boolean;
                    };
                    /** Whether this shipping zone is enabled. */
                    readonly enabled?: boolean;
                }[];
            };
        };
    };
    /**
     * Creates a *Shipping Zone*.
     *
     * **Required Fields**
     * * name
     */
    readonly createAShippingZones: {
        readonly parameters: {
            readonly header: {
                readonly Accept: string;
                readonly "Content-Type": string;
            };
            readonly body: {
                readonly body: {
                    /** Zone Id. READ-ONLY */
                    readonly id?: number;
                    /** Zone name. Required for /PUT */
                    readonly name: string;
                    readonly type?: "zip" | "country" | "state" | "global";
                    /** Array of zone locations. */
                    readonly locations?: readonly {
                        /** Location’s ID. */
                        readonly id?: number;
                        /** Location’s ZIP/postal code. */
                        readonly zip?: string;
                        /** 2-letter ISO Alpha-2 code for the country. */
                        readonly country_iso2?: string;
                        /** ISO Alpha-2 code for the state. */
                        readonly state_iso2?: string;
                    }[];
                    readonly free_shipping?: {
                        readonly enabled?: boolean;
                        /** (Float, Float-As-String, Integer) */
                        readonly minimum_sub_total?: string;
                        readonly exclude_fixed_shipping_products?: boolean;
                    };
                    readonly handling_fees?: {
                        readonly fixed_surcharge?: string;
                        readonly percentage_surcharge?: string;
                        readonly display_separately?: boolean;
                    };
                    /** Whether this shipping zone is enabled. */
                    readonly enabled?: boolean;
                };
            };
        };
        readonly responses: {
            readonly 200: {
                readonly schema: {
                    /** Zone Id. READ-ONLY */
                    readonly id?: number;
                    /** Zone name. Required for /PUT */
                    readonly name: string;
                    readonly type?: "zip" | "country" | "state" | "global";
                    /** Array of zone locations. */
                    readonly locations?: readonly {
                        /** Location’s ID. */
                        readonly id?: number;
                        /** Location’s ZIP/postal code. */
                        readonly zip?: string;
                        /** 2-letter ISO Alpha-2 code for the country. */
                        readonly country_iso2?: string;
                        /** ISO Alpha-2 code for the state. */
                        readonly state_iso2?: string;
                    }[];
                    readonly free_shipping?: {
                        readonly enabled?: boolean;
                        /** (Float, Float-As-String, Integer) */
                        readonly minimum_sub_total?: string;
                        readonly exclude_fixed_shipping_products?: boolean;
                    };
                    readonly handling_fees?: {
                        readonly fixed_surcharge?: string;
                        readonly percentage_surcharge?: string;
                        readonly display_separately?: boolean;
                    };
                    /** Whether this shipping zone is enabled. */
                    readonly enabled?: boolean;
                };
            };
        };
    };
    /** Returns a single *Shipping Zone*. */
    readonly getAShippingZone: {
        readonly parameters: {
            readonly path: {
                /** Id of the shipping zone. */
                readonly id: number;
            };
            readonly header: {
                readonly Accept: string;
                readonly "Content-Type": string;
            };
        };
        readonly responses: {
            readonly 200: {
                readonly schema: {
                    /** Zone Id. READ-ONLY */
                    readonly id?: number;
                    /** Zone name. Required for /PUT */
                    readonly name: string;
                    readonly type?: "zip" | "country" | "state" | "global";
                    /** Array of zone locations. */
                    readonly locations?: readonly {
                        /** Location’s ID. */
                        readonly id?: number;
                        /** Location’s ZIP/postal code. */
                        readonly zip?: string;
                        /** 2-letter ISO Alpha-2 code for the country. */
                        readonly country_iso2?: string;
                        /** ISO Alpha-2 code for the state. */
                        readonly state_iso2?: string;
                    }[];
                    readonly free_shipping?: {
                        readonly enabled?: boolean;
                        /** (Float, Float-As-String, Integer) */
                        readonly minimum_sub_total?: string;
                        readonly exclude_fixed_shipping_products?: boolean;
                    };
                    readonly handling_fees?: {
                        readonly fixed_surcharge?: string;
                        readonly percentage_surcharge?: string;
                        readonly display_separately?: boolean;
                    };
                    /** Whether this shipping zone is enabled. */
                    readonly enabled?: boolean;
                };
            };
        };
    };
    /**
     * Updates a *Shipping Zone*.
     *
     * **Required Fields**
     * * name
     *
     * **Read Only Fields**
     * * id
     */
    readonly updateAShippingZone: {
        readonly parameters: {
            readonly path: {
                /** Id of the shipping zone. */
                readonly id: number;
            };
            readonly header: {
                readonly Accept: string;
                readonly "Content-Type": string;
            };
            readonly body: {
                readonly body: {
                    /** Zone Id. READ-ONLY */
                    readonly id?: number;
                    /** Zone name. Required for /PUT */
                    readonly name: string;
                    readonly type?: "zip" | "country" | "state" | "global";
                    /** Array of zone locations. */
                    readonly locations?: readonly {
                        /** Location’s ID. */
                        readonly id?: number;
                        /** Location’s ZIP/postal code. */
                        readonly zip?: string;
                        /** 2-letter ISO Alpha-2 code for the country. */
                        readonly country_iso2?: string;
                        /** ISO Alpha-2 code for the state. */
                        readonly state_iso2?: string;
                    }[];
                    readonly free_shipping?: {
                        readonly enabled?: boolean;
                        /** (Float, Float-As-String, Integer) */
                        readonly minimum_sub_total?: string;
                        readonly exclude_fixed_shipping_products?: boolean;
                    };
                    readonly handling_fees?: {
                        readonly fixed_surcharge?: string;
                        readonly percentage_surcharge?: string;
                        readonly display_separately?: boolean;
                    };
                    /** Whether this shipping zone is enabled. */
                    readonly enabled?: boolean;
                };
            };
        };
        readonly responses: {
            readonly 200: {
                readonly schema: {
                    /** Zone Id. READ-ONLY */
                    readonly id?: number;
                    /** Zone name. Required for /PUT */
                    readonly name: string;
                    readonly type?: "zip" | "country" | "state" | "global";
                    /** Array of zone locations. */
                    readonly locations?: readonly {
                        /** Location’s ID. */
                        readonly id?: number;
                        /** Location’s ZIP/postal code. */
                        readonly zip?: string;
                        /** 2-letter ISO Alpha-2 code for the country. */
                        readonly country_iso2?: string;
                        /** ISO Alpha-2 code for the state. */
                        readonly state_iso2?: string;
                    }[];
                    readonly free_shipping?: {
                        readonly enabled?: boolean;
                        /** (Float, Float-As-String, Integer) */
                        readonly minimum_sub_total?: string;
                        readonly exclude_fixed_shipping_products?: boolean;
                    };
                    readonly handling_fees?: {
                        readonly fixed_surcharge?: string;
                        readonly percentage_surcharge?: string;
                        readonly display_separately?: boolean;
                    };
                    /** Whether this shipping zone is enabled. */
                    readonly enabled?: boolean;
                };
            };
        };
    };
    /** Deletes a *Shipping Zone*. */
    readonly deleteAShippingZone: {
        readonly parameters: {
            readonly path: {
                /** Id of the shipping zone. */
                readonly id: number;
            };
            readonly header: {
                readonly Accept: string;
                readonly "Content-Type": string;
            };
        };
        readonly responses: {
            readonly 204: never;
        };
    };
    /** Returns a list of *Shipping Methods* in a zone. Default sorting is by shipping-method id, from lowest to highest. */
    readonly getShippingMethodsZone: {
        readonly parameters: {
            readonly path: {
                /** Id of the shipping zone. */
                readonly zone_id: number;
            };
            readonly header: {
                readonly Accept: string;
                readonly "Content-Type": string;
            };
        };
        readonly responses: {
            readonly 200: {
                readonly schema: readonly definitions["shippingMethod_Full"][];
            };
        };
    };
    /**
     * Creates a *Shipping Method* within a shipping zone. Real Time Carrier Connections are also supported by this endpoint.
     *
     * ## Carrier Configurations – Current
     *
     * This section provides a sample request and a carrier-specific object/property model, for each supported carrier.
     *
     * ### USPS by Endicia
     *
     * #### Sample Request
     *
     *
     * ```json
     * {
     *     "name": "USPS by Endicia",
     *     "type": "endicia",
     *     "settings": {
     *         "carrier_options": {
     *             "delivery_services" : ["PriorityExpress","Priority", "PriorityMailExpressInternational"],
     * 			"packaging_type" : "LargeFlatRateBox",
     *             "show_transit_time" : true
     *         }
     *     },
     *     "enabled": true
     * }
     * ```
     *
     * ### USPS by Endicia Object Properties
     *
     * | Property | Type | Values |
     * | - | - | - |
     * | delivery_services | array | PriorityExpress <br> PriorityMailExpressInternational <br> FirstClassPackageInternationalService <br> Priority <br> PriorityMailInternational <br> First <br> ParcelSelect <br> MediaMail |
     * | packaging_type | array | FlatRateLegalEnvelope <br> FlatRatePaddedEnvelope <br> Parcel <br> SmallFlatRateBox <br> MediumFlatRateBox <br> LargeFlatRateBox <br> FlatRateEnvelope <br> RegionalRateBoxA <br> RegionalRateBoxB |
     * |show_transit_time | boolean | true <br> false |
     *
     *
     * ### FedEx
     *
     * #### Sample Request
     *
     * ```json
     * {
     *     "name": "FEDEX",
     *     "type": "fedex",
     *     "settings": {
     *         "carrier_options": {
     *             "delivery_services": [
     *                 "PRIORITY_OVERNIGHT",
     * 				"FEDEX_2_DAY"
     *             ],
     *             "dropoff_type": "REGULAR_PICKUP",
     *             "packaging_type": "FEDEX_ENVELOPE",
     *             "packing_method": "SEPARATE",
     *             "rate_type": "NONE",
     *             "include_package_value": true,
     *             "destination_type": "residential"
     *         }
     *     },
     *     "enabled": true
     * }
     * ```
     *
     * #### FedEx Object Properties
     *
     * | Property | Type | Values |
     * | - | - | - |
     * | delivery_services | array | PRIORITY_OVERNIGHT <br> STANDARD_OVERNIGHT <br> FIRST_OVERNIGHT <br> FEDEX_2_DAY <br> FEDEX_EXPRESS_SAVER <br> INTERNATIONAL_PRIORITY <br> INTERNATIONAL_ECONOMY <br> INTERNATIONAL_FIRST <br> FEDEX_1_DAY_FREIGHT <br> FEDEX_2_DAY_FREIGHT <br> FEDEX_3_DAY_FREIGHT <br> FEDEX_GROUND <br> GROUND_HOME_DELIVERY <br> INTERNATIONAL_PRIORITY_FREIGHT <br> INTERNATIONAL_ECONOMY_FREIGHT <br> EUROPE_FIRST_INTERNATIONAL_PRIORITY |
     * | dropoff_type | string | REGULAR_PICKUP <br> REQUEST_COURIER <br> DROP_BOX <br> BUSINESS_SERVICE_CENTER <br> STATION |
     * | packaging_type | string | FEDEX_ENVELOPE  <br> FEDEX_PAK <br> FEDEX_BOX <br> FEDEX_TUBE <br> FEDEX_10KG_BOX <br> FEDEX_25KG_BOX <br> YOUR_PACKAGING |
     * | packing_method | string | SEPARATE <br> COMBINED |
     * | rate_type | string | NONE <br> LIST |
     * | include_package_value | boolean | true <br> false |
     * | destination_type | string | residential <br> business |
     *
     * ### UPS Ready
     *
     * #### Sample Request
     *
     * ```json
     * {
     *     "name": "UPS ready",
     *     "type": "upsready",
     *     "settings": {
     *         "carrier_options": {
     *             "delivery_services": [
     *                 "2nd_Day_Air","Standard"
     *             ],
     *             "packaging_type": "21",
     *             "packing_method": "separate",
     *             "include_package_value": true,
     *             "destination_type": "residential",
     *             "show_transit_time" : true
     *         }
     *     },
     *     "enabled": true
     * }
     * ```
     *
     * #### UPS Ready Object Properties
     *
     * | Property | Type | Values |
     * | - | - | - |
     * | delivery_services | array | 2nd_Day_Air <br> 2nd_Day_Air_AM <br> 3_Day_Select <br> Expedited  <br> Express <br> Express_Plus <br> Express_Saver <br> Express_Early_AM <br> Ground <br> Next_Day_Air  <br> Next_Day_Air_Early_AM <br> Next_Day_Air_Saver <br> Saver <br> Standard <br> Today_Dedicated_Courier <br> Today_Express <br> Today_Express_Saver <br> Today_Intercity <br> Today_Standard <br> Worldwide_Expedited <br> Worldwide_Express <br> Worldwide_Express_Plus <br> Worldwide_Express_Saver <br> Worldwide_Saver |
     * | destination_type | string | residential <br> business |
     * | packing_method | string | separate <br> combined |
     * | packaging_type | string (only codes allowed) | 21: UPS® Express Box <br> 24: UPS® 25 KG Box <br> 25: UPS® 10 KG Box <br> 30: Pallet <br> 01: UPS® Letter <br> 02: Customer Supplied Package <br> 03: Tube <br> 04: PAK <br> 2a: Small Express Box <br> 2b: Medium Express Box <br> 2c: Large Express Box |
     * | include_package_value | boolean | true <br> false |
     * | show_transit_time | boolean | true <br> false |
     *
     * ### Canada Post
     *
     * #### Sample Request
     *
     * ```json
     * {
     *     "name": "Canada Post",
     *     "type": "canadapost",
     *     "settings": {
     *         "carrier_options": {
     *             "delivery_services": [
     *                 "DOM.RP","DOM.EP"
     *             ]
     *         }
     *     },
     *     "enabled": true
     * }
     * ```
     *
     * #### Canada Post Object Properties
     *
     * | Property | Type | Values |
     * | - | - | - |
     * | delivery_services | array | DOM.RP <br> DOM.EP <br> DOM.XP <br> DOM.XP.CERT <br> DOM.PC DOM.LIB <br> USA.EP <br> USA.PW.ENV <br> USA.PW.PAK <br> USA.PW.PARCEL <br> USA.SP.AIR <br> USA.TP <br> USA.TP.LVM <br> USA.XP <br> INT.XP <br> INT.IP.AIR <br> INT.IP.SURF <br> INT.PW.ENV <br> INT.PW.PAK <br> INT.PW.PARCEL <br> INT.SP.AIR <br> INT.SP.SURF <br> INT.TP |
     *
     * ### Australia Post
     *
     * ```json
     * {
     *     "name": "Australia Post",
     *     "type": "auspost",
     *     "settings": {
     *         "carrier_options": {
     *             "delivery_services": [
     *                 "AUS_PARCEL_REGULAR",
     * 				"AUS_PARCEL_EXPRESS"
     *             ]
     *         }
     *     },
     *     "enabled": true
     * }
     * ```
     *
     * #### Australia Post Object Properties
     *
     * | Property | Type | Values |
     * | - | - | - |
     * | delivery_services | array | AUS_LETTER_REGULAR_SMALL <br> AUS_LETTER_REGULAR_Large <br> AUS_LETTER_EXPRESS_SMALL <br> AUS_LETTER_EXPRESS_MEDIUM <br> AUS_LETTER_EXPRESS_LARGE <br> AUS_PARCEL_REGULAR <br> AUS_PARCEL_REGULAR_SATCHEL_500G <br> AUS_PARCEL_REGULAR_SATCHEL_3KG <br> AUS_PARCEL_REGULAR_SATCHEL_5KG <br> AUS_PARCEL_EXPRESS <br> AUS_PARCEL_EXPRESS_SATCHEL_500G <br> AUS_PARCEL_EXPRESS_SATCHEL_3KG <br> AUS_PARCEL_EXPRESS_SATCHEL_5KG <br> AUS_PARCEL_COURIER <br> AUS_PARCEL_COURIER_SATCHEL_MEDIUM <br> INT_PARCEL_COR_OWN_PACKAGING <br> INT_PARCEL_EXP_OWN_PACKAGING <br> INT_PARCEL_STD_OWN_PACKAGING <br> INT_PARCEL_AIR_OWN_PACKAGING <br> INT_PARCEL_SEA_OWN_PACKAGING |
     *
     * ### Royal Mail
     *
     * #### Sample Request
     *
     * ```json
     * {
     *     "name": "Royal Mail",
     *     "type": "royalmail",
     *     "settings": {
     *         "carrier_options": {
     *             "delivery_services": [
     *                 "StandardFirstClass",
     * 				"StandardSecondClass"
     *             ]
     *         }
     *     },
     *     "enabled": true
     * }
     * ```
     *
     * #### Royal Mail Object Properties
     *
     * | Property | Type | Values |
     * | - | - | - |
     * | delivery_services | array | SpecialDelivery1pm <br> SpecialDelivery9am <br> SpecialDelivery1pmSaturday <br> SpecialDelivery9amSaturday <br> SignedForFirstClass <br> SignedForSecondClass <br> Express9 <br> Express10 <br> ExpressAM <br> Express24 <br> Express48 <br> StandardFirstClass <br> StandardSecondClass <br> InternationalStandard <br> InternationalTracked <br> InternationalEconomy |
     *
     * ### Zoom2U
     *
     * #### Sample Request
     *
     * ```json
     * {
     *     "name": "Zoom2U",
     *     "type": "zoom2u",
     *     "settings": {
     *         "carrier_options": {
     *             "delivery_services": [
     *                 "3_hour",
     * 				"Same_day",
     * 				"VIP"
     *             ]
     *         }
     *     },
     *     "enabled": true
     * }
     * ```
     *
     * #### Zoom2U Object Properties
     *
     * | Property | Type | Values |
     * | - | - | - |
     * | delivery_services | array | 3_hour <br> Same_day <br> VIP|
     *
     *
     * ### Settings Objects
     *
     * A shipping method's `type` and `settings` properties can match one of the following models:
     *
     * ### perorder Object – Properties
     *
     * Object model for flat-rate shipping quotes per order.
     *
     * | Name | Type | Description |
     * | - | - | - |
     * | rate | number | Flat rate per order. |
     *
     * #### JSON Example
     *
     * ```json
     * {
     * 	"name": "Flat Rate per Order",
     * 	"type": "perorder",
     * 	"settings": {
     * 		"rate": 7
     * 	}
     * },
     * ```
     *
     * ### peritem Object – Properties
     *
     * Object model for flat-rate shipping quotes per item ordered.
     *
     * | Name | Type | Description |
     * | - | - | - |
     * | rate | number | Flat rate per item. |
     *
     * #### JSON Example
     *
     * ```json
     * {
     * 	"name": "Flat Rate per Item",
     * 	"type": "peritem",
     * 	"settings": {
     * 		"rate": 8
     * 	}
     * },
     * ```
     *
     * ### weight Object – Properties
     *
     * Object model for shipping quotes by weight.
     *
     * | Name | Type | Description |
     * | - | - | - |
     * | default_cost | number | Default shipping cost, applied either as a percentage of the order's total value or as a fixed amount. |
     * | default_cost_type | string | How the default shipping cost is calculated. One of: `percentage_of_total` or `fixed_amount`. |
     * | range | number | Array of [range](#range) objects. The units for these ranges' `lower_limit` and `upper_limit` properties depend on the default units set in the store's control panel. |
     *
     *
     * #### JSON Example
     *
     * ```json
     * {
     * 	"name": "Rate per Weight",
     * 	"type": "weight",
     * 	"settings": {
     * 		"default_cost": 12,
     * 		"default_cost_type": "fixed_amount",
     * 		"range": [
     * 			{
     * 				"lower_limit": 0,
     * 				"upper_limit": 20,
     * 				"shipping_cost": 8
     * 			},
     * 			{
     * 				"lower_limit": 20,
     * 				"upper_limit": 40,
     * 				"shipping_cost": 12
     * 			}
     * 		]
     * 	}
     * }
     * ```
     *
     * ### total Object – Properties
     *
     * Object model for shipping quotes by order's total value.
     *
     * | Name | Type | Description |
     * | - | - | - |
     * | default_cost | number | Default shipping cost, applied either as a percentage of the order's total value or as a fixed amount. |
     * | default_cost_type | string | How the default shipping cost is calculated. One of: `percentage_of_total` or `fixed_amount`. |
     * | include_order_total_taxes | boolean | Whether or not to include taxes on the order's total value in the shipping-cost calculation. |
     * | range | number | Array of [range](#range) objects. The units for these ranges' `lower_limit` and `upper_limit` properties are values in the store's currency. |
     *
     * #### JSON Example
     *
     * This example sets free shipping above a certain order total:
     *
     * ```json
     * {
     * 	"name": "Per Total or Free",
     * 	"type": "total",
     * 	"settings": {
     * 		"default_cost": 12,
     * 		"default_cost_type": "fixed_amount",
     * 		"include_order_total_taxes": 0,
     * 		"range": [
     * 			{
     * 				"lower_limit": 0,
     * 				"upper_limit": 5,
     * 				"shipping_cost": 5
     * 			},
     * 			{
     * 				"lower_limit": 5,
     * 				"upper_limit": 10,
     * 				"shipping_cost": 8
     * 			},
     * 			{
     * 				"lower_limit": 10,
     * 				"upper_limit": 20,
     * 				"shipping_cost": 10
     * 			},
     * 			{
     * 				"lower_limit": 20,
     * 				"upper_limit": 49.99,
     * 				"shipping_cost": 15
     * 			},
     * 			{
     * 				"lower_limit": 50,
     * 				"upper_limit": 100000,
     * 				"shipping_cost": 0
     * 			}
     * 		]
     * 	}
     * }
     * ```
     *
     * ### Range Object – Properties
     *
     * Object model to define ranges for shipping quotes. Units are defined in the parent object.
     *
     * | Name | Type | Description |
     * | - | - | - |
     * | lower_limit | number | Lower limit for order total. |
     * | upper_limit | number | Upper limit for order total. |
     * | shipping_cost | number | Shipping cost for orders whose total falls between the lower and upper limits. |
     *
     * #### JSON Example
     *
     * ```json
     * {
     * 	"lower_limit": 0,
     * 	"upper_limit": 20,
     * 	"shipping_cost": 8
     * }
     * ```
     */
    readonly createAShippingMethod: {
        readonly parameters: {
            readonly path: {
                /** Id of the shipping zone. */
                readonly zone_id: number;
            };
            readonly header: {
                readonly Accept: string;
                readonly "Content-Type": string;
            };
            readonly body: {
                readonly body: definitions["shippingMethod_Base"];
            };
        };
        readonly responses: {
            readonly 200: {
                readonly schema: definitions["shippingMethod_Full"];
            };
        };
    };
    /**
     * Returns a single *Shipping Method* in a zone. Real Time Carrier Connections are also supported by this endpoint.
     *
     * ### Settings Objects
     *
     * A shipping method's `type` and `settings` properties can match one of the following models:
     *
     * ### perorder Object – Properties
     *
     * Object model for flat-rate shipping quotes per order.
     *
     * | Name | Type | Description |
     * | - | - | - |
     * | rate | number | Flat rate per order. |
     *
     * #### JSON Example
     *
     * ```json
     * {
     *     "name": "Flat Rate per Order",
     *     "type": "perorder",
     *     "settings": {
     *         "rate": 7
     * },
     * ```
     *
     * ### peritem Object – Properties
     *
     * Object model for flat-rate shipping quotes per item ordered.
     *
     * | Name | Type | Description |
     * | - | - | - |
     * | rate | number | Flat rate per item. |
     *
     * #### JSON Example
     *
     * ```json
     * {
     *     "name": "Flat Rate per Item",
     *     "type": "peritem",
     *     "settings": {
     *         "rate": 8
     * },
     * ```
     *
     * ### weight Object – Properties
     *
     * Object model for shipping quotes by weight.
     *
     * | Name | Type | Description |
     * | - | - | - |
     * | default_cost | number | Default shipping cost, applied either as a percentage of the order's total value or as a fixed amount. |
     * | default_cost_type | string | How the default shipping cost is calculated. One of: `percentage_of_total` or `fixed_amount`. |
     * | range | number | Array of [range](#range) objects. The units for these ranges' `lower_limit` and `upper_limit` properties depend on the default units set in the store's control panel. |
     *
     *
     * #### JSON Example
     * ```json
     * {
     *     "name": "Rate per Weight",
     *     "type": "weight",
     *     "settings": {
     *         "default_cost": 12,
     *         "default_cost_type": "fixed_amount",
     *         "range": [
     *             {
     *                 "lower_limit": 0,
     *                 "upper_limit": 20,
     *                 "shipping_cost": 8
     *             },
     *             {
     *                 "lower_limit": 20,
     *                 "upper_limit": 40,
     *                 "shipping_cost": 12
     *             }
     *         ]
     *     }
     * }
     * ```
     *
     * ### total Object – Properties
     *
     * Object model for shipping quotes by order's total value.
     *
     * | Name | Type | Description |
     * | - | - | - |
     * | default_cost | number | Default shipping cost, applied either as a percentage of the order's total value or as a fixed amount. |
     * | default_cost_type | string | How the default shipping cost is calculated. One of: `percentage_of_total` or `fixed_amount`. |
     * | include_order_total_taxes | boolean | Whether or not to include taxes on the order's total value in the shipping-cost calculation. |
     * | range | number | Array of [range](#range) objects. The units for these ranges' `lower_limit` and `upper_limit` properties are values in the store's currency. |
     *
     * #### JSON Example
     *
     * This example sets free shipping above a certain order total:
     *
     * ```json
     * {
     *     "name": "Per Total or Free",
     *     "type": "total",
     *     "settings": {
     *         "default_cost": 12,
     *         "default_cost_type": "fixed_amount",
     *         "include_order_total_taxes": 0,
     *         "range": [
     *             {
     *                 "lower_limit": 0,
     *                 "upper_limit": 5,
     *                 "shipping_cost": 5
     *             },
     *             {
     *                 "lower_limit": 5,
     *                 "upper_limit": 10,
     *                 "shipping_cost": 8
     *             },
     *             {
     *                 "lower_limit": 10,
     *                 "upper_limit": 20,
     *                 "shipping_cost": 10
     *             },
     *             {
     *                 "lower_limit": 20,
     *                 "upper_limit": 49.99,
     *                 "shipping_cost": 15
     *             },
     *             {
     *                 "lower_limit": 50,
     *                 "upper_limit": 100000,
     *                 "shipping_cost": 0
     *             }
     *         ]
     *     }
     * }
     * ```
     *
     * ### Range Object – Properties
     *
     * Object model to define ranges for shipping quotes. Units are defined in the parent object.
     *
     * | Name | Type | Description |
     * | - | - | - |
     * | lower_limit | number | Lower limit for order total. |
     * | upper_limit | number | Upper limit for order total. |
     * | shipping_cost | number | Shipping cost for orders whose total falls between the lower and upper limits. |
     *
     * #### JSON Example
     *
     * ```json
     * {
     *     "lower_limit": 0,
     *     "upper_limit": 20,
     *     "shipping_cost": 8
     * }
     * ```
     */
    readonly getAShippingMethod: {
        readonly parameters: {
            readonly path: {
                /** Id of the shipping zone. */
                readonly zone_id: number;
                /** Id of the shipping method within the shipping zone. */
                readonly method_id: number;
            };
            readonly header: {
                readonly Accept: string;
                readonly "Content-Type": string;
            };
        };
        readonly responses: {
            readonly 200: {
                readonly schema: {
                    /** Shipping-method ID. READ-ONLY */
                    readonly id?: number;
                    /** Display name for shipping method. */
                    readonly name?: string;
                    readonly type?: "perorder" | "peritem" | "weight" | "total" | "auspost" | "canadapost" | "endicia" | "usps" | "fedex" | "royalmail" | "upsready";
                    /** Depends on the shipping-method type. See the [supported settings object](#supported-settings). */
                    readonly settings?: {
                        readonly [key: string]: any;
                    };
                    /** Whether or not this shipping-zone method is enabled. */
                    readonly enabled?: boolean;
                    /**
                     * `fixed_surcharge`: flat-rate handling fee applied to shipping cost.
                     *
                     * `percentage_surcharge`: percentage handling fee applied to shipping cost
                     */
                    readonly handling_fees?: "fixed_surcharge" | "percentage_surcharge";
                    /** Whether or not this shipping zone is the fallback if all others are not valid for the order. */
                    readonly is_fallback?: boolean;
                };
            };
        };
    };
    /**
     * Updates a *Shipping Method* in a zone. Real Time Carrier Connections are also supported by this endpoint.
     *
     * **Read Only Fields**
     * * id
     *
     * ### Settings Objects
     *
     * A shipping method's `type` and `settings` properties can match one of the following models:
     *
     * ### perorder Object – Properties
     *
     * Object model for flat-rate shipping quotes per order.
     *
     * | Name | Type | Description |
     * | - | - | - |
     * | rate | number | Flat rate per order. |
     *
     * #### JSON Example
     *
     * ```json
     * {
     * 	"name": "Flat Rate per Order",
     * 	"type": "perorder",
     * 	"settings": {
     * 		"rate": 7
     * 	}
     * },
     * ```
     *
     * ### peritem Object – Properties
     *
     * Object model for flat-rate shipping quotes per item ordered.
     *
     * | Name | Type | Description |
     * | - | - | - |
     * | rate | number | Flat rate per item. |
     *
     * #### JSON Example
     *
     * ```json
     * {
     * 	"name": "Flat Rate per Item",
     * 	"type": "peritem",
     * 	"settings": {
     * 		"rate": 8
     * 	}
     * },
     * ```
     *
     * ### weight Object – Properties
     *
     * Object model for shipping quotes by weight.
     *
     * | Name | Type | Description |
     * | - | - | - |
     * | default_cost | number | Default shipping cost, applied either as a percentage of the order's total value or as a fixed amount. |
     * | default_cost_type | string | How the default shipping cost is calculated. One of: `percentage_of_total` or `fixed_amount`. |
     * | range | number | Array of [range](#range) objects. The units for these ranges' `lower_limit` and `upper_limit` properties depend on the default units set in the store's control panel. |
     *
     *
     * #### JSON Example
     *
     * ```json
     * {
     * 	"name": "Rate per Weight",
     * 	"type": "weight",
     * 	"settings": {
     * 		"default_cost": 12,
     * 		"default_cost_type": "fixed_amount",
     * 		"range": [
     * 			{
     * 				"lower_limit": 0,
     * 				"upper_limit": 20,
     * 				"shipping_cost": 8
     * 			},
     * 			{
     * 				"lower_limit": 20,
     * 				"upper_limit": 40,
     * 				"shipping_cost": 12
     * 			}
     * 		]
     * 	}
     * }
     * ```
     *
     * ### total Object – Properties
     *
     * Object model for shipping quotes by order's total value.
     *
     * | Name | Type | Description |
     * | - | - | - |
     * | default_cost | number | Default shipping cost, applied either as a percentage of the order's total value or as a fixed amount. |
     * | default_cost_type | string | How the default shipping cost is calculated. One of: `percentage_of_total` or `fixed_amount`. |
     * | include_order_total_taxes | boolean | Whether or not to include taxes on the order's total value in the shipping-cost calculation. |
     * | range | number | Array of [range](#range) objects. The units for these ranges' `lower_limit` and `upper_limit` properties are values in the store's currency. |
     *
     * #### JSON Example
     *
     * This example sets free shipping above a certain order total:
     *
     * ```json
     * {
     * 	"name": "Per Total or Free",
     * 	"type": "total",
     * 	"settings": {
     * 		"default_cost": 12,
     * 		"default_cost_type": "fixed_amount",
     * 		"include_order_total_taxes": 0,
     * 		"range": [
     * 			{
     * 				"lower_limit": 0,
     * 				"upper_limit": 5,
     * 				"shipping_cost": 5
     * 			},
     * 			{
     * 				"lower_limit": 5,
     * 				"upper_limit": 10,
     * 				"shipping_cost": 8
     * 			},
     * 			{
     * 				"lower_limit": 10,
     * 				"upper_limit": 20,
     * 				"shipping_cost": 10
     * 			},
     * 			{
     * 				"lower_limit": 20,
     * 				"upper_limit": 49.99,
     * 				"shipping_cost": 15
     * 			},
     * 			{
     * 				"lower_limit": 50,
     * 				"upper_limit": 100000,
     * 				"shipping_cost": 0
     * 			}
     * 		]
     * 	}
     * }
     * ```
     *
     * ### Range Object – Properties
     *
     * Object model to define ranges for shipping quotes. Units are defined in the parent object.
     *
     * | Name | Type | Description |
     * | - | - | - |
     * | lower_limit | number | Lower limit for order total. |
     * | upper_limit | number | Upper limit for order total. |
     * | shipping_cost | number | Shipping cost for orders whose total falls between the lower and upper limits. |
     *
     * #### JSON Example
     *
     * ```json
     * {
     * 	"lower_limit": 0,
     * 	"upper_limit": 20,
     * 	"shipping_cost": 8
     * }
     * ```
     */
    readonly updateAShippingMethod: {
        readonly parameters: {
            readonly path: {
                /** Id of the shipping zone. */
                readonly zone_id: number;
                /** Id of the shipping method within the shipping zone. */
                readonly method_id: number;
            };
            readonly header: {
                readonly Accept: string;
                readonly "Content-Type": string;
            };
            readonly body: {
                readonly body: definitions["shippingMethod_Base"];
            };
        };
        readonly responses: {
            readonly 200: {
                readonly schema: definitions["shippingMethod_Full"];
            };
        };
    };
    /** Deletes an *Shipping Method*. Real Time Carrier Connections can also be deleted. */
    readonly deleteAShippingMethod: {
        readonly parameters: {
            readonly path: {
                /** Id of the shipping zone. */
                readonly zone_id: number;
                /** Id of the shipping method within the shipping zone. */
                readonly method_id: number;
            };
            readonly header: {
                readonly Accept: string;
                readonly "Content-Type": string;
            };
        };
        readonly responses: {
            readonly 204: never;
        };
    };
    /**
     * Updates a *Carrier Connection*.
     *
     * Updating the carrier connection is done using the same information as creating the connection. This endpoint can be used to update credentials.
     */
    readonly updateACarrierConnection: {
        readonly parameters: {
            readonly header: {
                readonly Accept: string;
                readonly "Content-Type": string;
            };
            readonly body: {
                /** The request body will vary by carrier. See [Create a Carrier Connection](/api-reference/store-management/shipping-api/shipping-carrier/postshippingcarrierconnection). */
                readonly body?: definitions["carrierConnection"];
            };
        };
        readonly responses: {
            /** Returns if request was succesful */
            readonly 204: never;
            /**
             * If a required field is not provided it will return a 400 response.
             *
             * [
             *     {
             *         "status": 400,
             *         "message": "Required fields missing [key]"
             *     }
             * ]
             */
            readonly 400: {
                readonly schema: {
                    readonly [key: string]: any;
                };
            };
        };
    };
    /**
     * Deletes a *Carrier Connection*.
     *
     * **Required Fields**
     * * carrier_id
     */
    readonly deleteCarrierConnection: {
        readonly parameters: {
            readonly header: {
                readonly Accept: string;
                readonly "Content-Type": string;
            };
            readonly body: {
                readonly body: {
                    readonly carrier_id?: string;
                };
            };
        };
        readonly responses: {
            /** Returns if request was succesful */
            readonly 204: never;
            /**
             * If a required field is not provided it will return a 400 response.
             *
             * [
             *     {
             *         "status": 400,
             *         "message": "Required fields missing [key]"
             *     }
             * ]
             */
            readonly 400: {
                readonly schema: {
                    readonly [key: string]: any;
                };
            };
        };
    };
}
