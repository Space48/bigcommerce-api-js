/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */
export interface paths {
    readonly "/rate": {
        /** Request shipping rates. */
        readonly post: operations["requestShippingRates"];
    };
    readonly "/check_connection_options": {
        /** Validate connection options. */
        readonly post: operations["validateConnectionOptions"];
    };
}
export interface definitions {
    /** Payload sent off to a Shipping Provider in order to get quotes. */
    readonly RateRequestPayload: {
        readonly base_options: definitions["BaseOptions"];
        /** Optional, any zone specific request options declared by the carrier and configued by the merchant to retrieve rates */
        readonly zone_options?: {
            readonly [key: string]: any;
        };
        /** Optional, any global request options declared by the carrier and configued by the merchant to retrieve rates */
        readonly connection_options?: {
            readonly [key: string]: any;
        };
    };
    /** Payload sent off to a Shipping Provider in order to get quotes. */
    readonly BaseOptionsSchema: {
        /** The minimum required payload that is sent to retrieve rates */
        readonly base_options: {
            /** Object representing a destination or origin address for items. */
            readonly origin: {
                readonly street_1?: string;
                readonly street_2?: string;
                readonly zip: string;
                readonly city?: string;
                /** State in ISO_3166 2 format */
                readonly state_iso2?: string;
                /** Country in ISO_3166 2 format */
                readonly country_iso2: string;
                /** Optional, defaults to residential */
                readonly address_type?: "RESIDENTIAL" | "COMMERCIAL";
            };
            /** Object representing a destination or origin address for items. */
            readonly destination: {
                readonly street_1?: string;
                readonly street_2?: string;
                readonly zip: string;
                readonly city?: string;
                /** State in ISO_3166 2 format */
                readonly state_iso2?: string;
                /** Country in ISO_3166 2 format */
                readonly country_iso2: string;
                /** Optional, defaults to residential */
                readonly address_type?: "RESIDENTIAL" | "COMMERCIAL";
            };
            readonly items: readonly {
                /** The variant SKU */
                readonly sku?: string;
                readonly variant_id?: string;
                readonly product_id?: string;
                readonly name?: string;
                /** Value object for a length measurement */
                readonly length?: {
                    readonly units: "cm" | "in";
                    readonly value: number;
                };
                /** Value object for a length measurement */
                readonly width?: {
                    readonly units: "cm" | "in";
                    readonly value: number;
                };
                /** Value object for a length measurement */
                readonly height?: {
                    readonly units: "cm" | "in";
                    readonly value: number;
                };
                /** Value object for a weight measurement */
                readonly weight?: {
                    readonly units: "oz" | "g";
                    readonly value: number;
                };
                /** Value object for a money amount */
                readonly discounted_price?: {
                    readonly currency: string;
                    readonly amount: number;
                };
                /** Value object for a money amount */
                readonly declared_value?: {
                    readonly currency: string;
                    readonly amount: number;
                };
                readonly quantity?: number;
                /** A list of arbitrary properties stored as part of the product or product variant meta fields. These consist of public fields specific to the carrier integration. */
                readonly attributes?: readonly {
                    /** The key associated with the meta field */
                    readonly key?: string;
                    /** The value associated with the meta field */
                    readonly value?: string;
                    /** The namespace associated with product(https://developer.bigcommerce.com/api-reference/catalog/catalog-api/product-metafields/createproductmetafield) or product variant (https://developer.bigcommerce.com/api-reference/catalog/catalog-api/product-variants-metafields/createvariantmetafield) meta fields. The meta field namespace should be saved under this format 'shipping_carrier_{yourCarrierId}' otherwise it will not be recognized as an attribute. */
                    readonly namespace?: string;
                    /** Resource type associated with the meta field. Currently the only values available are 'product' or 'variant' */
                    readonly resource_type?: "product" | "variant";
                    /** The resource id of the meta field */
                    readonly resource_id?: string;
                    /** Attribute type associated with the product or product variant meta field. Currently the only value for this is 'metafield' */
                    readonly attribute_type?: "metafield";
                }[];
            }[];
            /** The details of the Customer that has made the purchase. */
            readonly customer?: {
                readonly customer_groups?: readonly {
                    readonly customer_group_id?: number;
                    readonly customer_group_name?: string;
                }[];
                readonly customer_id?: number;
            };
            readonly cart_id?: string;
            readonly store_id: string;
            /** A collection of Reference Value objects. */
            readonly request_context?: {
                readonly reference_values?: readonly {
                    readonly name?: string;
                    readonly value?: string;
                }[];
            };
        };
        /** Optional, any zone specific request options declared by the carrier and configued by the merchant to retrieve rates */
        readonly zone_options?: {
            readonly [key: string]: any;
        };
        /** Optional, any global request options declared by the carrier and configued by the merchant to retrieve rates */
        readonly connection_options?: {
            readonly [key: string]: any;
        };
    };
    /** The details of the Customer that has made the purchase. */
    readonly CustomerDetails: {
        readonly customer_groups?: readonly {
            readonly customer_group_id?: number;
            readonly customer_group_name?: string;
        }[];
        readonly customer_id?: number;
    };
    /** Optional, any zone specific request options declared by the carrier and configued by the merchant to retrieve rates */
    readonly ZoneOptionsInstance: {
        readonly [key: string]: any;
    };
    /** Optional, any global request options declared by the carrier and configued by the merchant to retrieve rates */
    readonly ConnectionOptionsInstance: {
        readonly [key: string]: any;
    };
    /** Optional, any checkout specific request options to retrieve rates */
    readonly RateOptionsInstance: readonly {
        readonly key: string;
        readonly value: string;
    }[];
    /** The Group (if any) that this customer is in. This will be default to zero if the customer is not in a group or is a guest. */
    readonly CustomerGroup: {
        readonly customer_group_id?: number;
        readonly customer_group_name?: string;
    };
    readonly KeyValuePair: {
        readonly key: string;
        readonly value: string;
    };
    /** The response from the Shipping Service, will contain zero to many quotes. */
    readonly RateResponsePayload: {
        readonly quote_id: string;
        readonly messages: readonly {
            readonly text: string;
            readonly type: "INFO" | "WARNING" | "ERROR";
        }[];
        readonly carrier_quotes: readonly {
            readonly carrier_info?: {
                readonly code: string;
                readonly display_name: string;
            };
            readonly quotes: readonly {
                /** A code describing the service */
                readonly code: string;
                /** A display name for the service */
                readonly display_name: string;
                /** Value object for a money amount */
                readonly cost: {
                    readonly currency: string;
                    readonly amount: number;
                };
                readonly messages?: readonly {
                    readonly text: string;
                    readonly type: "INFO" | "WARNING" | "ERROR";
                }[];
                readonly description?: string;
                readonly rate_id?: string;
                /** Value object for a money amount */
                readonly discounted_cost?: {
                    readonly currency: string;
                    readonly amount: number;
                };
                readonly dispatch_date?: string;
                /** Value object for the length of time in transit */
                readonly transit_time?: {
                    readonly units?: "BUSINESS_DAYS" | "DAYS" | "HOURS";
                    readonly duration?: number;
                };
            }[];
        }[];
    };
    /** A grouping of carrier rates and optionally info about that carrier */
    readonly CarrierQuoteObject: {
        readonly carrier_info?: {
            readonly code: string;
            readonly display_name: string;
        };
        readonly quotes: readonly {
            /** A code describing the service */
            readonly code: string;
            /** A display name for the service */
            readonly display_name: string;
            /** Value object for a money amount */
            readonly cost: {
                readonly currency: string;
                readonly amount: number;
            };
            readonly messages?: readonly {
                readonly text: string;
                readonly type: "INFO" | "WARNING" | "ERROR";
            }[];
            readonly description?: string;
            readonly rate_id?: string;
            /** Value object for a money amount */
            readonly discounted_cost?: {
                readonly currency: string;
                readonly amount: number;
            };
            readonly dispatch_date?: string;
            /** Value object for the length of time in transit */
            readonly transit_time?: {
                readonly units?: "BUSINESS_DAYS" | "DAYS" | "HOURS";
                readonly duration?: number;
            };
        }[];
    };
    /** A cart item along with it's shipping specific attributes */
    readonly RateRequestItem: {
        /** The variant SKU */
        readonly sku?: string;
        readonly variant_id?: string;
        readonly product_id?: string;
        readonly name?: string;
        /** Value object for a length measurement */
        readonly length?: {
            readonly units: "cm" | "in";
            readonly value: number;
        };
        /** Value object for a length measurement */
        readonly width?: {
            readonly units: "cm" | "in";
            readonly value: number;
        };
        /** Value object for a length measurement */
        readonly height?: {
            readonly units: "cm" | "in";
            readonly value: number;
        };
        /** Value object for a weight measurement */
        readonly weight?: {
            readonly units: "oz" | "g";
            readonly value: number;
        };
        /** Value object for a money amount */
        readonly discounted_price?: {
            readonly currency: string;
            readonly amount: number;
        };
        /** Value object for a money amount */
        readonly declared_value?: {
            readonly currency: string;
            readonly amount: number;
        };
        readonly quantity?: number;
        /** A list of arbitrary properties stored as part of the product or product variant meta fields. These consist of any public fields specific to the carrier integration. */
        readonly attributes?: readonly {
            /** The key associated with the product or product variant meta field */
            readonly key?: string;
            /** The value associated with the product or product variant meta field */
            readonly value?: string;
            /** The namespace associated with product(https://developer.bigcommerce.com/api-reference/catalog/catalog-api/product-metafields/createproductmetafield) or product variant (https://developer.bigcommerce.com/api-reference/catalog/catalog-api/product-variants-metafields/createvariantmetafield) meta fields. The meta field namespace should be saved under this format 'shipping_carrier_{yourCarrierId}' otherwise it will not be recognized as an attribute. */
            readonly namespace?: string;
            /** Resource type associated with the product or product variant meta field. Currently the only values available are 'product' or 'variant' */
            readonly resource_type?: "product" | "variant";
            /** The resource id of the product or product variant meta field */
            readonly resource_id?: string;
            /** Attribute type associated with the product or product variant meta field. Currently the only value for this is 'metafield' */
            readonly attribute_type?: "metafield";
        }[];
    };
    /** A collection of Reference Value objects. */
    readonly RequestContext: {
        readonly reference_values?: readonly {
            readonly name?: string;
            readonly value?: string;
        }[];
    };
    /** Value objects contained within the request context */
    readonly ReferenceValue: {
        readonly name?: string;
        readonly value?: string;
    };
    /** A simple string/type response for returning information. */
    readonly Message: {
        readonly text: string;
        readonly type: "INFO" | "WARNING" | "ERROR";
    };
    /** A quote being returned as part of the rate request. */
    readonly RateQuoteObject: {
        /** A code describing the service */
        readonly code: string;
        /** A display name for the service */
        readonly display_name: string;
        /** Value object for a money amount */
        readonly cost: {
            readonly currency: string;
            readonly amount: number;
        };
        readonly messages?: readonly {
            readonly text: string;
            readonly type: "INFO" | "WARNING" | "ERROR";
        }[];
        readonly description?: string;
        readonly rate_id?: string;
        /** Value object for a money amount */
        readonly discounted_cost?: {
            readonly currency: string;
            readonly amount: number;
        };
        readonly dispatch_date?: string;
        /** Value object for the length of time in transit */
        readonly transit_time?: {
            readonly units?: "BUSINESS_DAYS" | "DAYS" | "HOURS";
            readonly duration?: number;
        };
    };
    /** Value object for the length of time in transit */
    readonly TransitTimeObject: {
        readonly units?: "BUSINESS_DAYS" | "DAYS" | "HOURS";
        readonly duration?: number;
    };
    /** Value object for an attribute. This represents a product or product variant meta field. */
    readonly AttributeValue: {
        /** The key associated with the product or product variant meta field */
        readonly key?: string;
        /** The value associated with the product or product variant meta field */
        readonly value?: string;
        /** The namespace associated with product(https://developer.bigcommerce.com/api-reference/catalog/catalog-api/product-metafields/createproductmetafield) or product variant (https://developer.bigcommerce.com/api-reference/catalog/catalog-api/product-variants-metafields/createvariantmetafield) meta fields. The meta field namespace should be saved under this format 'shipping_carrier_{yourCarrierId}' otherwise it will not be recognized as an attribute. */
        readonly namespace?: string;
        /** Resource type associated with the product or product variant meta field. Currently the only values available are 'product' or 'variant' */
        readonly resource_type?: "product" | "variant";
        readonly resource_id?: string;
        /** Attribute type associated with the product or product variant meta field. Currently the only value for this is 'metafield' */
        readonly attribute_type?: "metafield";
    };
    /** Value object for a money amount */
    readonly MoneyValue: {
        readonly currency: string;
        readonly amount: number;
    };
    /** Value object for a length measurement */
    readonly DimensionValue: {
        readonly units: "cm" | "in";
        readonly value: number;
    };
    /** Value object for a weight measurement */
    readonly WeightValue: {
        readonly units: "oz" | "g";
        readonly value: number;
    };
    /** A set of carrier specific fields that will be displayed to shoppers at checkout */
    readonly RateOptionsSchema: readonly {
        /** The internal code that represents this input field */
        readonly code: string;
        /** Display name for this input field */
        readonly label: string;
        /** Longer description text to be displayed as a tooltip at checkout */
        readonly description?: string;
        /** Placeholder for any validation we choose to implement */
        readonly validation?: string;
        /** How this input will be displayed */
        readonly type: "date" | "string" | "select" | "code";
        /** A valid default value for this field */
        readonly default_value: string;
        /** For select type fields, the list of available options */
        readonly value_options?: readonly string[];
        /** For date type fields, a set of valid date ranges available to choose from */
        readonly date_ranges?: readonly {
            /** Value Object representing a Date */
            readonly from?: {
                readonly date?: string;
                readonly timezone?: string;
            };
            /** Value Object representing a Date */
            readonly to?: {
                readonly date?: string;
                readonly timezone?: string;
            };
        }[];
    }[];
    /** An individual carrier defined field to display at checkout, along with any defaults and validation */
    readonly KeyValuePairSchema: {
        /** The internal code that represents this input field */
        readonly code: string;
        /** Display name for this input field */
        readonly label: string;
        /** Longer description text to be displayed as a tooltip at checkout */
        readonly description?: string;
        /** Placeholder for any validation we choose to implement */
        readonly validation?: string;
        /** How this input will be displayed */
        readonly type: "date" | "string" | "select" | "code";
        /** A valid default value for this field */
        readonly default_value: string;
        /** For select type fields, the list of available options */
        readonly value_options?: readonly string[];
        /** For date type fields, a set of valid date ranges available to choose from */
        readonly date_ranges?: readonly {
            /** Value Object representing a Date */
            readonly from?: {
                readonly date?: string;
                readonly timezone?: string;
            };
            /** Value Object representing a Date */
            readonly to?: {
                readonly date?: string;
                readonly timezone?: string;
            };
        }[];
    };
    /** Object representing a destination or origin address for items. */
    readonly ShippingAddress: {
        readonly street_1?: string;
        readonly street_2?: string;
        readonly zip: string;
        readonly city?: string;
        /** State in ISO_3166 2 format */
        readonly state_iso2?: string;
        /** Country in ISO_3166 2 format */
        readonly country_iso2: string;
        /** Optional, defaults to residential */
        readonly address_type?: "RESIDENTIAL" | "COMMERCIAL";
    };
    /**
     * The payload sent to a Shipping Provider to check that the store is connected to this provider.
     * Each Shipping Provider will have different configurations for the payload.
     */
    readonly CheckConnectionOptionsRequestPayload: {
        /** Optional, any global request options declared by the carrier and configued by the merchant to retrieve rates */
        readonly connection_options: {
            readonly [key: string]: any;
        };
    };
    /** The response recieved back from the Shipping Provider connection check this allows the store to understand if the connection was successful. */
    readonly CheckConnectionOptionsResponsePayload: {
        /** Indicates whether or not the connection options are valid */
        readonly valid?: boolean;
        readonly messages?: readonly {
            readonly text: string;
            readonly type: "INFO" | "WARNING" | "ERROR";
        }[];
    };
    /** Representation of a range of date objects */
    readonly DateRange: {
        /** Value Object representing a Date */
        readonly from?: {
            readonly date?: string;
            readonly timezone?: string;
        };
        /** Value Object representing a Date */
        readonly to?: {
            readonly date?: string;
            readonly timezone?: string;
        };
    };
    /** Value Object representing a Date */
    readonly DateValue: {
        readonly date?: string;
        readonly timezone?: string;
    };
    /** The minimum required payload that is sent to retrieve rates */
    readonly BaseOptions: {
        /** Object representing a destination or origin address for items. */
        readonly origin: {
            readonly street_1?: string;
            readonly street_2?: string;
            readonly zip: string;
            readonly city?: string;
            /** State in ISO_3166 2 format */
            readonly state_iso2?: string;
            /** Country in ISO_3166 2 format */
            readonly country_iso2: string;
            /** Optional, defaults to residential */
            readonly address_type?: "RESIDENTIAL" | "COMMERCIAL";
        };
        /** Object representing a destination or origin address for items. */
        readonly destination: {
            readonly street_1?: string;
            readonly street_2?: string;
            readonly zip: string;
            readonly city?: string;
            /** State in ISO_3166 2 format */
            readonly state_iso2?: string;
            /** Country in ISO_3166 2 format */
            readonly country_iso2: string;
            /** Optional, defaults to residential */
            readonly address_type?: "RESIDENTIAL" | "COMMERCIAL";
        };
        readonly items: readonly {
            /** The variant SKU */
            readonly sku?: string;
            readonly variant_id?: string;
            readonly product_id?: string;
            readonly name?: string;
            /** Value object for a length measurement */
            readonly length?: {
                readonly units: "cm" | "in";
                readonly value: number;
            };
            /** Value object for a length measurement */
            readonly width?: {
                readonly units: "cm" | "in";
                readonly value: number;
            };
            /** Value object for a length measurement */
            readonly height?: {
                readonly units: "cm" | "in";
                readonly value: number;
            };
            /** Value object for a weight measurement */
            readonly weight?: {
                readonly units: "oz" | "g";
                readonly value: number;
            };
            /** Value object for a money amount */
            readonly discounted_price?: {
                readonly currency: string;
                readonly amount: number;
            };
            /** Value object for a money amount */
            readonly declared_value?: {
                readonly currency: string;
                readonly amount: number;
            };
            readonly quantity?: number;
            /** A list of arbitrary properties stored as part of the product or product variant meta fields. These consist of public fields specific to the carrier integration. */
            readonly attributes?: readonly {
                /** The key associated with the meta field */
                readonly key?: string;
                /** The value associated with the meta field */
                readonly value?: string;
                /** The namespace associated with product(https://developer.bigcommerce.com/api-reference/catalog/catalog-api/product-metafields/createproductmetafield) or product variant (https://developer.bigcommerce.com/api-reference/catalog/catalog-api/product-variants-metafields/createvariantmetafield) meta fields. The meta field namespace should be saved under this format 'shipping_carrier_{yourCarrierId}' otherwise it will not be recognized as an attribute. */
                readonly namespace?: string;
                /** Resource type associated with the meta field. Currently the only values available are 'product' or 'variant' */
                readonly resource_type?: "product" | "variant";
                /** The resource id of the meta field */
                readonly resource_id?: string;
                /** Attribute type associated with the product or product variant meta field. Currently the only value for this is 'metafield' */
                readonly attribute_type?: "metafield";
            }[];
        }[];
        /** The details of the Customer that has made the purchase. */
        readonly customer?: {
            readonly customer_groups?: readonly {
                readonly customer_group_id?: number;
                readonly customer_group_name?: string;
            }[];
            readonly customer_id?: number;
        };
        readonly cart_id?: string;
        readonly store_id: string;
        /** A collection of Reference Value objects. */
        readonly request_context?: {
            readonly reference_values?: readonly {
                readonly name?: string;
                readonly value?: string;
            }[];
        };
    };
}
export interface operations {
    /** Request shipping rates. */
    readonly requestShippingRates: {
        readonly parameters: {
            readonly body: {
                /** Rate request object */
                readonly body: definitions["RateRequestPayload"];
            };
        };
        readonly responses: {
            /** Quote response */
            readonly 200: {
                readonly schema: definitions["RateResponsePayload"];
            };
        };
    };
    /** Validate connection options. */
    readonly validateConnectionOptions: {
        readonly parameters: {
            readonly body: {
                /** Check connection options request */
                readonly body: definitions["CheckConnectionOptionsRequestPayload"];
            };
        };
        readonly responses: {
            /** Check connection options response */
            readonly 200: {
                readonly schema: definitions["CheckConnectionOptionsResponsePayload"];
            };
        };
    };
}
