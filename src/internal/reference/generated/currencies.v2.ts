/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  readonly "/currencies": {
    /** Returns a list of all store *Currency*. */
    readonly get: {
      readonly parameters: {
        readonly header: {
          readonly Accept: string;
          readonly "Content-Type": string;
        };
      };
      readonly responses: {
        readonly 200: responses["currencyCollection_Resp"];
      };
    };
    /**
     * Creates *Currency*.
     *
     * **Required Fields**
     *
     * * name
     * * currency_code
     * * currency_exchange_rate
     * * token_location
     * * token
     * * decimal_token
     * * thousands_token
     * * decimal_places
     *
     * **Read-Only Fields**
     *
     * * id
     * * date_created
     * * date_modified
     *
     *
     * The `is_default` property can only be set to true. The value of `is_default` cannot be unset, only overridden. To change the store's default currency via the BigCommerce control panel, please see [Managing Currencies](https://support.bigcommerce.com/articles/Public/Managing-Currencies/?q=currency&l=en_US&fs=Search&pn=1#default).
     */
    readonly post: {
      readonly parameters: {
        readonly header: {
          readonly Accept: string;
          readonly "Content-Type": string;
        };
        readonly body: {
          readonly body?: definitions["currency_Post"];
        };
      };
      readonly responses: {
        readonly 200: responses["currency_Resp"];
      };
    };
    /** Deletes all non-default store currencies. */
    readonly delete: {
      readonly parameters: {
        readonly header: {
          readonly "Content-Type": string;
          readonly Accepts: string;
        };
      };
      readonly responses: {
        readonly 204: {
          readonly schema: { readonly [key: string]: any };
        };
      };
    };
  };
  readonly "/currencies/{id}": {
    /** Returns a single *Currency*. */
    readonly get: operations["getACurrency"];
    /**
     * Updates a *Currency*.
     *
     * **Read-Only Fields**
     *
     * * id
     * * date_created
     * * date_modified
     * * currency_code
     *
     *
     * The `is_default` property can only be set to true. The value of `is_default` cannot be unset, only overridden.
     */
    readonly put: operations["updateACurrency"];
    /**
     * Deletes a *Currency*.
     *
     * If a currency's `is_default` property is set to true, this currency cannot be deleted.
     */
    readonly delete: operations["deleteACurrency"];
    readonly parameters: {
      readonly path: {
        /** Currency Id */
        readonly id: string;
      };
    };
  };
}

export interface definitions {
  readonly currency_Post: definitions["currency_Base"];
  /** Currency Object */
  readonly currency_Base: {
    /** Specifies the store’s default currency display format. For write operations, only true value is accepted. When set to true, it cannot be unset, only overridden. */
    readonly is_default?: boolean;
    /** 2-letter ISO Alpha-2 code for this currency’s country. */
    readonly country_iso2?: string;
    /** 3-letter ISO 4217 code for this currency. */
    readonly currency_code: string;
    /** Amount of this currency that is equivalent to one U.S. dollar.(Float, Float as String, Integer) */
    readonly currency_exchange_rate: string;
    /** Specifies whether to use the Open Exchange Rates service to update the currency conversion. A value of false specifies a static conversion value. auto_update only applies to non-transactional currencies. */
    readonly auto_update?: boolean;
    /** Specifies whether this currency’s symbol appears to the “left” or “right” of the numeric amount. */
    readonly token_location: string;
    /** Symbol for this currency. */
    readonly token: string;
    /** Symbol used as the decimal separator in this currency. */
    readonly decimal_token: string;
    /** Symbol used as the thousands separator in this currency. */
    readonly thousands_token: string;
    /** Number of decimal places to show for this currency. */
    readonly decimal_places: number;
    /** Name of the currency. */
    readonly name: string;
    /** If the currency is active on the store. */
    readonly enabled?: boolean;
    /** Indicates if the currency is set as transactional or not. False means display only currency */
    readonly is_transactional?: boolean;
  };
  readonly currency_Put: definitions["currency_Post"];
  readonly currency_Full: definitions["currency_Base"] & {
    /** Id of the currency. READ-ONLY. */
    readonly id?: number;
    /** Date the currency was last updated, created or modified. */
    readonly last_updated?: string;
  };
}

export interface parameters {
  readonly Accept: string;
  readonly "Content-Type": string;
}

export interface responses {
  readonly currencyCollection_Resp: {
    readonly schema: readonly definitions["currency_Full"][];
  };
  readonly currency_Resp: {
    readonly schema: definitions["currency_Full"];
  };
}

export interface operations {
  /** Returns a single *Currency*. */
  readonly getACurrency: {
    readonly parameters: {
      readonly path: {
        /** Currency Id */
        readonly id: string;
      };
      readonly header: {
        readonly "Content-Type": string;
        readonly Accept: string;
      };
    };
    readonly responses: {
      readonly 200: responses["currency_Resp"];
    };
  };
  /**
   * Updates a *Currency*.
   *
   * **Read-Only Fields**
   *
   * * id
   * * date_created
   * * date_modified
   * * currency_code
   *
   *
   * The `is_default` property can only be set to true. The value of `is_default` cannot be unset, only overridden.
   */
  readonly updateACurrency: {
    readonly parameters: {
      readonly path: {
        /** Currency Id */
        readonly id: string;
      };
      readonly header: {
        readonly Accept: string;
        readonly "Content-Type": string;
      };
      readonly body: {
        readonly body?: definitions["currency_Put"];
      };
    };
    readonly responses: {
      readonly 200: responses["currency_Resp"];
    };
  };
  /**
   * Deletes a *Currency*.
   *
   * If a currency's `is_default` property is set to true, this currency cannot be deleted.
   */
  readonly deleteACurrency: {
    readonly parameters: {
      readonly path: {
        /** Currency Id */
        readonly id: string;
      };
      readonly header: {
        readonly Accept: string;
        readonly "Content-Type": string;
      };
    };
    readonly responses: {
      readonly 204: {
        readonly schema: { readonly [key: string]: any };
      };
    };
  };
}
