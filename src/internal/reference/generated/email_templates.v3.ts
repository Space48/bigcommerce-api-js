/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  readonly "/marketing/email-templates": {
    /** Get a list of email templates. */
    readonly get: operations["getEmailTemplates"];
  };
  readonly "/marketing/email-templates/{template-name}": {
    /** Get an single global email template or a channel-specific email template override. */
    readonly get: operations["getEmailTemplate"];
    /** Update a global template or create a channel-specific email template override. */
    readonly put: operations["updateEmailTemplate"];
    /** Removes a channel-specific email template override. */
    readonly delete: operations["deleteEmailTemplateOverride"];
    readonly parameters: {
      readonly path: {
        readonly "template-name": string;
      };
    };
  };
}

export interface components {
  readonly schemas: {
    readonly ErrorResponse: components["schemas"]["BaseError"] & {
      readonly errors?: components["schemas"]["DetailedErrors"];
    };
    /** Error payload for the BigCommerce API. */
    readonly BaseError: {
      /** The HTTP status code. */
      readonly status?: number;
      /** The error title describing the particular error. */
      readonly title?: string;
      readonly type?: string;
      readonly instance?: string;
    };
    readonly DetailedErrors: { readonly [key: string]: string };
    /** A collection of all email templates. */
    readonly EmailTemplatesCollection: readonly components["schemas"]["EmailTemplate"][];
    /** Data for a particular email template */
    readonly EmailTemplate: {
      readonly type_id?:
        | "abandoned_cart_email"
        | "account_details_changed_email"
        | "combined_order_status_email"
        | "createaccount_email"
        | "createguestaccount_email"
        | "giftcertificate_email"
        | "invoice_email"
        | "ordermessage_notification"
        | "return_confirmation_email"
        | "return_statuschange_email"
        | "product_review_email"
        | "account_reset_password_email";
      readonly body?: string;
      readonly translations?: components["schemas"]["LocaleCollection"];
      readonly subject?: string;
    };
    /** A particular locale's translations. */
    readonly LocaleObject: {
      /** Locale code for this language, such as 'en', 'en-us', 'fr-ca'. */
      readonly locale?: string;
      /** Language keys for the template. User-defined. Should match any lang keys used in the template. */
      readonly keys?: { readonly [key: string]: any };
    };
    /** A collection of locale translations for the static language. */
    readonly LocaleCollection: readonly components["schemas"]["LocaleObject"][];
    /** Data for updated template */
    readonly EmailTemplateUpdate: {
      readonly body: string;
      readonly translations?: components["schemas"]["LocaleCollection"];
      readonly subject: string;
    };
    readonly scratch: {
      readonly id?: string;
    };
  };
  readonly parameters: {
    /** Channel ID to use for channel-specific setting. If omitted, you will interact with the global setting only. */
    readonly ChannelIdParam: number;
    /** Required Channel ID. This delete operation will delete overridden settings for this channel, thus restoring them to the global defaults. */
    readonly RequiredChannelIdParamForDelete: number;
  };
}

export interface operations {
  /** Get a list of email templates. */
  readonly getEmailTemplates: {
    readonly parameters: {
      readonly query: {
        /** Channel ID to use for channel-specific setting. If omitted, you will interact with the global setting only. */
        readonly channel_id?: components["parameters"]["ChannelIdParam"];
      };
    };
    readonly responses: {
      /** An array of email templates on the store */
      readonly 200: {
        readonly content: {
          readonly "application/json": {
            readonly data?: components["schemas"]["EmailTemplatesCollection"];
            readonly meta?: { readonly [key: string]: any };
          };
        };
      };
    };
  };
  /** Get an single global email template or a channel-specific email template override. */
  readonly getEmailTemplate: {
    readonly parameters: {
      readonly path: {
        readonly "template-name": string;
      };
      readonly query: {
        /** Channel ID to use for channel-specific setting. If omitted, you will interact with the global setting only. */
        readonly channel_id?: components["parameters"]["ChannelIdParam"];
      };
    };
    readonly responses: {
      /** OK */
      readonly 200: {
        readonly content: {
          readonly "application/json": {
            readonly data?: components["schemas"]["EmailTemplate"];
            readonly meta?: { readonly [key: string]: any };
          };
        };
      };
    };
  };
  /** Update a global template or create a channel-specific email template override. */
  readonly updateEmailTemplate: {
    readonly parameters: {
      readonly path: {
        readonly "template-name": string;
      };
      readonly query: {
        /** Channel ID to use for channel-specific setting. If omitted, you will interact with the global setting only. */
        readonly channel_id?: components["parameters"]["ChannelIdParam"];
      };
    };
    readonly responses: {
      /** OK */
      readonly 200: {
        readonly content: {
          readonly "application/json": {
            readonly data?: components["schemas"]["EmailTemplate"];
            readonly meta?: { readonly [key: string]: any };
          };
        };
      };
      /** Bad Request */
      readonly 400: {
        readonly content: {
          readonly "application/json": components["schemas"]["ErrorResponse"];
        };
      };
    };
    readonly requestBody: {
      readonly content: {
        readonly "application/json": components["schemas"]["EmailTemplate"];
      };
    };
  };
  /** Removes a channel-specific email template override. */
  readonly deleteEmailTemplateOverride: {
    readonly parameters: {
      readonly path: {
        readonly "template-name": string;
      };
      readonly query: {
        /** Required Channel ID. This delete operation will delete overridden settings for this channel, thus restoring them to the global defaults. */
        readonly channel_id: components["parameters"]["RequiredChannelIdParamForDelete"];
      };
    };
    readonly responses: {
      /** OK */
      readonly 200: unknown;
    };
  };
}
