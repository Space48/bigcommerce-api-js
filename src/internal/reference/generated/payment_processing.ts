/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  readonly "/payments": {
    /** Process payments for an order. See [Payment Processing](https://developer.bigcommerce.com/api-docs/store-management/payment-processing) for more information. */
    readonly post: operations["PaymentsPost"];
  };
  readonly "/payments/access_tokens": {
    /**
     * This endpoint provides the capability to create a payment access token. The payment access token is required when making request to Payment API for submitting payment for an order.
     *
     * After the token is created then use the token to [Process Payments](/api-reference/payments/payments-process-payments/payment/paymentspost).
     *
     * **Required Fields**
     * * order_id
     */
    readonly post: operations["PaymentsAccessTokensPost"];
  };
  readonly "/payments/methods": {
    /**
     * Returns a list of accepted payment methods based on the `order_id`.
     *
     * **Notes**
     * * Use the [Create an Order](https://developer.bigcommerce.com/api-reference/store-management/checkouts/checkout-orders/createanorder) endpoint, to generate the `order_id`.
     * * Orders created will be set to incomplete order status.
     *
     * **Required Fields**
     * * order_id
     */
    readonly get: operations["PaymentsMethodsGet"];
  };
}

export interface components {
  readonly schemas: {
    readonly PaymentRequest: {
      readonly payment: {
        /** Amount in smallest currency unit */
        readonly amount?: number;
        /** Currency code */
        readonly currency_code?: string;
        readonly instrument: { readonly [key: string]: any };
        /** Identifier for payment method that will be used for this payment */
        readonly payment_method_id: string;
      };
    };
    readonly Payment: {
      /** Amount in smallest currency unit */
      readonly amount?: number;
      /** Currency code */
      readonly currency_code?: string;
      readonly instrument: { readonly [key: string]: any };
      /** Identifier for payment method that will be used for this payment */
      readonly payment_method_id: string;
    };
    readonly SuccessPaymentResponse: {
      /** Identifier for this transaction */
      readonly id?: string;
      /** Transaction type for this payment */
      readonly transaction_type?: "authorization" | "purchase";
      /** Status to indicate a success response */
      readonly status?: "success" | "pending";
    };
    /** Transaction type for this payment */
    readonly TransactionType: "authorization" | "purchase";
    /** Status to indicate a success response */
    readonly Status: "success" | "pending";
    readonly ErrorPaymentResponse: {
      /** HTTP status code */
      readonly status: number;
      /** Short summary describing the particular error */
      readonly title: string;
      /** Detailed summary describing the particular error */
      readonly detail?: string;
      /** Reference that identifies the particular error */
      readonly type: string;
      /** Code representing the particular error */
      readonly code?: number;
      readonly errors?: { readonly [key: string]: string };
    };
    readonly Card: {
      /** Type to classify this payment instrument */
      readonly type: string;
      /** Cardholder's full name */
      readonly cardholder_name: string;
      /** Credit card number */
      readonly number: string;
      /** Expiry month of this card */
      readonly expiry_month: number;
      /** Expiry year of this card */
      readonly expiry_year: number;
      /** Verification value of this card (CVV or last_4) */
      readonly verification_value?: string;
      /** Issue month of this card */
      readonly issue_month?: number;
      /** Issue year of this card */
      readonly issue_year?: number;
      /** Issue number of this card */
      readonly issue_number?: number;
    };
    readonly StoredCard: {
      /** Type to classify this payment instrument */
      readonly type: string;
      /** Identifier representing this stored card */
      readonly token: string;
    };
    readonly BasePaymentResponse: {
      /** Identifier for this transaction */
      readonly id?: string;
      /** Transaction type for this payment */
      readonly transaction_type?: "authorization" | "purchase";
    };
    readonly PendingPaymentResponse: {
      /** Identifier for this transaction */
      readonly id?: string;
      /** Transaction type for this payment */
      readonly transaction_type?: "authorization" | "purchase";
      /** Status to indicate a success response */
      readonly status?: "success" | "pending";
    };
    readonly StoredPaypalAccount: {
      /** Type to classify this payment instrument */
      readonly type: "stored_paypal_account";
      /** Identifier representing this stored paypal account */
      readonly token: string;
    };
    readonly Order: {
      /** Identifier for the order */
      readonly id: number;
      /** Whether this is a recurring order. If the order is recurring this field should be set to true in order to let the payment gateway know. */
      readonly is_recurring?: boolean;
    };
    readonly PaymentAccessTokenRequest: {
      readonly order: {
        /** Identifier for the order */
        readonly id: number;
        /** Whether this is a recurring order. If the order is recurring this field should be set to true in order to let the payment gateway know. */
        readonly is_recurring?: boolean;
      };
    };
    readonly PaymentAccessToken: {
      /** Payment access token. This token is required in subsequent payment request to Payment API endpoint. */
      readonly id: string;
    };
    readonly paymentMethodStoredInstrument: {
      /** Brand of this card such as VISA or Mastercard */
      readonly brand: string;
      /** Expiry month of this card */
      readonly expiry_month: number;
      /** Expiry year of this card */
      readonly expiry_year: number;
      /** Issuer identification number of this card. This is extracted from the card when the order is payed for. */
      readonly issuer_identification_number: string;
      /** Last four numbers of this card */
      readonly last_4: string;
      /** Identifier representing this stored card. This is used to identify cards within BigCommerce. It is the same as the `payment_access_token` that returns via the [Get Transactions endpoint](https://developer.bigcommerce.com/api-reference/orders/orders-transactions-api/orders/gettransactions). */
      readonly token: string;
      /** Whether this instrument is a default instrument */
      readonly is_default: boolean;
      /** Type to classify this stored card */
      readonly type: string;
    };
    readonly paymentMethod_Full: {
      /** Identifier for this payment method */
      readonly id: string;
      /** Name of this payment method */
      readonly name: string;
      readonly stored_instruments?: readonly components["schemas"]["paymentMethodStoredInstrument"][];
      readonly supported_instruments: readonly {
        /** Type of this instrument */
        readonly instrument_type:
          | "VISA"
          | "MASTERCARD"
          | "DISCOVER"
          | "AMEX"
          | "DINERS_CLUB"
          | "JCB"
          | "DANKORT"
          | "MAESTRO"
          | "STORED_CARD";
        /** Whether verification value is required for payment */
        readonly verification_value_required?: boolean;
      }[];
      /** Whether this payment method is on test mode */
      readonly test_mode: boolean;
      /** Type to classify this payment method */
      readonly type: string;
    };
    readonly SupportedCardInstrument: {
      /** Type of this instrument */
      readonly instrument_type:
        | "VISA"
        | "MASTERCARD"
        | "DISCOVER"
        | "AMEX"
        | "DINERS_CLUB"
        | "JCB"
        | "DANKORT"
        | "MAESTRO"
        | "STORED_CARD";
      /** Whether verification value is required for payment */
      readonly verification_value_required?: boolean;
    };
    readonly Error: {
      /** HTTP status code */
      readonly status: number;
      /** Short summary describing the particular error */
      readonly title: string;
      /** Detailed summary describing the particular error */
      readonly detail?: string;
      /** Reference that identifies the particular error */
      readonly type: string;
      /** Code representing the particular error */
      readonly code?: number;
    };
    readonly ErrorResponse: {
      /** HTTP status code */
      readonly status: number;
      /** Short summary describing the particular error */
      readonly title: string;
      /** Detailed summary describing the particular error */
      readonly detail?: string;
      /** Reference that identifies the particular error */
      readonly type: string;
      /** Code representing the particular error */
      readonly code?: number;
      readonly errors?: { readonly [key: string]: string };
    };
    /** Type of this instrument */
    readonly InstrumentType:
      | "VISA"
      | "MASTERCARD"
      | "DISCOVER"
      | "AMEX"
      | "DINERS_CLUB"
      | "JCB"
      | "DANKORT"
      | "MAESTRO"
      | "STORED_CARD";
    readonly StoredPaypalAccountInstrument: {
      /** Email address of this stored account */
      readonly email: string;
      /** Identifier representing this stored account */
      readonly token: string;
      /** Whether this instrument is a default instrument */
      readonly is_default: boolean;
      /** Type to classify this stored account */
      readonly type: "stored_paypal_account";
    };
    readonly SupportedPaypalAccountInstrument: {
      /** Type of this instrument */
      readonly instrument_type: "STORED_PAYPAL_ACCOUNT";
    };
  };
  readonly responses: {
    readonly paymentsMethods_Resp: {
      readonly content: {
        readonly "application/json": {
          readonly data?: readonly components["schemas"]["paymentMethod_Full"][];
        };
      };
    };
    readonly paymentAccessToken_Resp: {
      readonly content: {
        readonly "application/json": {
          readonly data?: components["schemas"]["PaymentAccessToken"];
        };
      };
    };
  };
  readonly parameters: {
    readonly Accept: "application/vnd.bc.v1+json";
    readonly "Content-Type": string;
  };
}

export interface operations {
  /** Process payments for an order. See [Payment Processing](https://developer.bigcommerce.com/api-docs/store-management/payment-processing) for more information. */
  readonly PaymentsPost: {
    readonly parameters: {
      readonly header: {
        /** Authorization header with a valid payment access token is required to access this endpoint e.g. Authorization: PAT a-valid-payment-access-token */
        readonly Authorization: string;
        readonly Accept?: "application/vnd.bc.v1+json";
        readonly "Content-Type"?: string;
      };
    };
    readonly responses: {
      /** Payment has been successfully processed */
      readonly 202: {
        readonly content: {
          readonly "application/json": {
            /** Identifier for this transaction */
            readonly id?: string;
            /** Transaction type for this payment */
            readonly transaction_type?: "authorization" | "purchase";
            /** Status to indicate a success response */
            readonly status?: "success" | "pending";
          };
        };
      };
      /** Payment request has been rejected due to malformed request */
      readonly 400: {
        readonly content: {
          readonly "application/json": {
            /** HTTP status code */
            readonly status: number;
            /** Short summary describing the particular error */
            readonly title: string;
            /** Detailed summary describing the particular error */
            readonly detail?: string;
            /** Reference that identifies the particular error */
            readonly type: string;
            /** Code representing the particular error */
            readonly code?: number;
            readonly errors?: { readonly [key: string]: string };
          };
        };
      };
      /** Valid authentication required */
      readonly 401: {
        readonly content: {
          readonly "application/json": {
            /** HTTP status code */
            readonly status: number;
            /** Short summary describing the particular error */
            readonly title: string;
            /** Detailed summary describing the particular error */
            readonly detail?: string;
            /** Reference that identifies the particular error */
            readonly type: string;
            /** Code representing the particular error */
            readonly code?: number;
            readonly errors?: { readonly [key: string]: string };
          };
        };
      };
      /** Payment request has been rejected due to missing, invalid data or declined by payment provider */
      readonly 422: {
        readonly content: {
          readonly "application/json": {
            /** HTTP status code */
            readonly status: number;
            /** Short summary describing the particular error */
            readonly title: string;
            /** Detailed summary describing the particular error */
            readonly detail?: string;
            /** Reference that identifies the particular error */
            readonly type: string;
            /** Code representing the particular error */
            readonly code?: number;
            readonly errors?: { readonly [key: string]: string };
          };
        };
      };
      /** Internal server error */
      readonly default: {
        readonly content: {
          readonly "application/json": {
            /** HTTP status code */
            readonly status: number;
            /** Short summary describing the particular error */
            readonly title: string;
            /** Detailed summary describing the particular error */
            readonly detail?: string;
            /** Reference that identifies the particular error */
            readonly type: string;
            /** Code representing the particular error */
            readonly code?: number;
            readonly errors?: { readonly [key: string]: string };
          };
        };
      };
    };
    readonly requestBody: {
      readonly content: {
        readonly "application/json": {
          readonly payment: {
            readonly instrument:
              | components["schemas"]["Card"]
              | components["schemas"]["StoredCard"]
              | components["schemas"]["StoredPaypalAccount"];
            /** Identifier for payment method that will be used for this payment and `id` from the Get Accepted Payment Methods API */
            readonly payment_method_id: string;
            /** To use `save_instrument`, configure the payment gateway to accept stored cards. */
            readonly save_instrument?: boolean;
          };
        };
      };
    };
  };
  /**
   * This endpoint provides the capability to create a payment access token. The payment access token is required when making request to Payment API for submitting payment for an order.
   *
   * After the token is created then use the token to [Process Payments](/api-reference/payments/payments-process-payments/payment/paymentspost).
   *
   * **Required Fields**
   * * order_id
   */
  readonly PaymentsAccessTokensPost: {
    readonly parameters: {
      readonly header: {
        readonly Accept?: string;
        readonly "Content-Type"?: string;
      };
    };
    readonly responses: {
      /** Payment access token has been successfully created */
      readonly 201: {
        readonly content: {
          readonly "application/json": {
            readonly data?: {
              /** Payment access token. This token is required in subsequent payment request to Payment API endpoint. */
              readonly id: string;
            };
          };
        };
      };
      /** Request has been rejected */
      readonly 400: {
        readonly content: {
          readonly "application/json": {
            /** HTTP status code */
            readonly status: number;
            /** Short summary describing the particular error */
            readonly title: string;
            /** Detailed summary describing the particular error */
            readonly detail?: string;
            /** Reference that identifies the particular error */
            readonly type: string;
            /** Code representing the particular error */
            readonly code?: number;
            readonly errors?: { readonly [key: string]: string };
          };
        };
      };
      /** Valid authentication required */
      readonly 401: {
        readonly content: {
          readonly "application/json": {
            /** HTTP status code */
            readonly status: number;
            /** Short summary describing the particular error */
            readonly title: string;
            /** Detailed summary describing the particular error */
            readonly detail?: string;
            /** Reference that identifies the particular error */
            readonly type: string;
            /** Code representing the particular error */
            readonly code?: number;
            readonly errors?: { readonly [key: string]: string };
          };
        };
      };
      /** Request has been rejected due to resource not being found */
      readonly 404: {
        readonly content: {
          readonly "application/json": {
            /** HTTP status code */
            readonly status: number;
            /** Short summary describing the particular error */
            readonly title: string;
            /** Detailed summary describing the particular error */
            readonly detail?: string;
            /** Reference that identifies the particular error */
            readonly type: string;
            /** Code representing the particular error */
            readonly code?: number;
            readonly errors?: { readonly [key: string]: string };
          };
        };
      };
      /** Request has been rejected due to conflict with the current state of the target resource */
      readonly 409: {
        readonly content: {
          readonly "application/json": {
            /** HTTP status code */
            readonly status: number;
            /** Short summary describing the particular error */
            readonly title: string;
            /** Detailed summary describing the particular error */
            readonly detail?: string;
            /** Reference that identifies the particular error */
            readonly type: string;
            /** Code representing the particular error */
            readonly code?: number;
            readonly errors?: { readonly [key: string]: string };
          };
        };
      };
      /** Request has been rejected due to missing or invalid data */
      readonly 422: {
        readonly content: {
          readonly "application/json": {
            /** HTTP status code */
            readonly status: number;
            /** Short summary describing the particular error */
            readonly title: string;
            /** Detailed summary describing the particular error */
            readonly detail?: string;
            /** Reference that identifies the particular error */
            readonly type: string;
            /** Code representing the particular error */
            readonly code?: number;
            readonly errors?: { readonly [key: string]: string };
          };
        };
      };
      /** Internal server error */
      readonly default: {
        readonly content: {
          readonly "application/json": {
            /** HTTP status code */
            readonly status: number;
            /** Short summary describing the particular error */
            readonly title: string;
            /** Detailed summary describing the particular error */
            readonly detail?: string;
            /** Reference that identifies the particular error */
            readonly type: string;
            /** Code representing the particular error */
            readonly code?: number;
            readonly errors?: { readonly [key: string]: string };
          };
        };
      };
    };
    readonly requestBody: {
      readonly content: {
        readonly "application/json": {
          readonly order: components["schemas"]["Order"];
        };
      };
    };
  };
  /**
   * Returns a list of accepted payment methods based on the `order_id`.
   *
   * **Notes**
   * * Use the [Create an Order](https://developer.bigcommerce.com/api-reference/store-management/checkouts/checkout-orders/createanorder) endpoint, to generate the `order_id`.
   * * Orders created will be set to incomplete order status.
   *
   * **Required Fields**
   * * order_id
   */
  readonly PaymentsMethodsGet: {
    readonly parameters: {
      readonly query: {
        /** Identifier for the order */
        readonly order_id?: number;
      };
      readonly header: {
        readonly Accept?: string;
        readonly "Content-Type"?: string;
      };
    };
    readonly responses: {
      readonly 200: components["responses"]["paymentsMethods_Resp"];
      /** Request has been rejected */
      readonly 400: {
        readonly content: {
          readonly "application/json": {
            /** HTTP status code */
            readonly status: number;
            /** Short summary describing the particular error */
            readonly title: string;
            /** Detailed summary describing the particular error */
            readonly detail?: string;
            /** Reference that identifies the particular error */
            readonly type: string;
            /** Code representing the particular error */
            readonly code?: number;
            readonly errors?: { readonly [key: string]: string };
          };
        };
      };
      /** Valid authentication required */
      readonly 401: {
        readonly content: {
          readonly "application/json": {
            /** HTTP status code */
            readonly status: number;
            /** Short summary describing the particular error */
            readonly title: string;
            /** Detailed summary describing the particular error */
            readonly detail?: string;
            /** Reference that identifies the particular error */
            readonly type: string;
            /** Code representing the particular error */
            readonly code?: number;
            readonly errors?: { readonly [key: string]: string };
          };
        };
      };
      /** Request has been rejected due to resource not being found */
      readonly 404: {
        readonly content: {
          readonly "application/json": {
            /** HTTP status code */
            readonly status: number;
            /** Short summary describing the particular error */
            readonly title: string;
            /** Detailed summary describing the particular error */
            readonly detail?: string;
            /** Reference that identifies the particular error */
            readonly type: string;
            /** Code representing the particular error */
            readonly code?: number;
            readonly errors?: { readonly [key: string]: string };
          };
        };
      };
      /** Request has been rejected due to missing or invalid data */
      readonly 422: {
        readonly content: {
          readonly "application/json": {
            /** HTTP status code */
            readonly status: number;
            /** Short summary describing the particular error */
            readonly title: string;
            /** Detailed summary describing the particular error */
            readonly detail?: string;
            /** Reference that identifies the particular error */
            readonly type: string;
            /** Code representing the particular error */
            readonly code?: number;
            readonly errors?: { readonly [key: string]: string };
          };
        };
      };
      /** Internal server error */
      readonly default: {
        readonly content: {
          readonly "application/json": {
            /** HTTP status code */
            readonly status: number;
            /** Short summary describing the particular error */
            readonly title: string;
            /** Detailed summary describing the particular error */
            readonly detail?: string;
            /** Reference that identifies the particular error */
            readonly type: string;
            /** Code representing the particular error */
            readonly code?: number;
            readonly errors?: { readonly [key: string]: string };
          };
        };
      };
    };
    readonly requestBody: {
      readonly content: {
        readonly "application/json": {
          readonly order_id?: number;
        };
        readonly "application/xml": { readonly [key: string]: any };
      };
    };
  };
}
