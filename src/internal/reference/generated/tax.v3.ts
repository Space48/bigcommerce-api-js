/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  readonly "/tax/providers/{provider_id}/connection": {
    /**
     * Retrieve the connection status of the specified tax provider in the context of a store.
     *
     *
     *
     * <div class="HubBlock--callout">
     * <div class="CalloutBlock--info">
     * <div class="HubBlock-content">
     *
     * > ### Note
     * > * Requires **read** permissions on the **Information and Settings** scope.
     *
     * </div>
     * </div>
     * </div>
     */
    readonly get: operations["provider-connection-get"];
    /**
     * Set the HTTP Basic Authentication credentials for the specified provider. The configured `username` and `password` will be used to authenticate each API request to the Tax Provider from the associated store.
     *
     * <div class="HubBlock--callout">
     * <div class="CalloutBlock--info">
     * <div class="HubBlock-content">
     *
     * > ### Note
     * > * This operation will be logged in [Store Logs](https://support.bigcommerce.com/s/article/Using-Store-Logs) under **Staff Actions**.
     * > * Requires **write** permissions on the **Information and Settings** [scope](https://developer.bigcommerce.com/api-docs/getting-started/authentication/rest-api-authentication#oauth-scopes).
     *
     * </div>
     * </div>
     * </div>
     */
    readonly put: operations["provider-connection-put"];
    /**
     * Remove any previously set basic connection credentials for the specified provider. If the specified provider is the active tax provider on the store, the store's active tax provider will be reset to BigCommerce Manual Tax. It is suggested to call this endpoint during a single-click app [uninstall callback](https://developer.bigcommerce.com/api-docs/apps/guide/callbacks#uninstall-callback).
     *
     * <div class="HubBlock--callout">
     * <div class="CalloutBlock--info">
     * <div class="HubBlock-content">
     *
     * > ### Note
     * > * This operation will be logged in [Store Logs](https://support.bigcommerce.com/s/article/Using-Store-Logs) under **Staff Actions**.
     * > * Requires **write** permissions on the **Information and Settings** [scope](https://developer.bigcommerce.com/api-docs/getting-started/authentication/rest-api-authentication#oauth-scopes).
     *
     * </div>
     * </div>
     * </div>
     */
    readonly delete: operations["provider-connection-delete"];
    readonly parameters: {
      readonly path: {
        /** The Tax Provider's `provider_id` provided by BigCommerce after the provider [shares their provider details](https://developer.bigcommerce.com/api-docs/providers/tax#sharing-provider-details-with-bigcommerce). */
        readonly provider_id: string;
      };
    };
  };
}

export interface components {
  readonly schemas: {
    readonly "response-connection": {
      readonly data?: {
        /** Identifies a unique account on the external tax provider infrastructure. May be used to reconcile the two platforms. */
        readonly username?: string;
        /**
         * Describes whether the stored credentials are considered complete and configured, ready to be used for Tax Provider API requests.
         *
         * Merchants may enable any **configured** tax provider for storefront tax quotation.
         */
        readonly configured?: boolean;
      };
    };
  };
  readonly parameters: {
    /** Unique key that identifies the Tax Provider on the BigCommerce platform. */
    readonly provider_id: string;
  };
}

export interface operations {
  /**
   * Retrieve the connection status of the specified tax provider in the context of a store.
   *
   *
   *
   * <div class="HubBlock--callout">
   * <div class="CalloutBlock--info">
   * <div class="HubBlock-content">
   *
   * > ### Note
   * > * Requires **read** permissions on the **Information and Settings** scope.
   *
   * </div>
   * </div>
   * </div>
   */
  readonly "provider-connection-get": {
    readonly parameters: {
      readonly path: {
        /** The Tax Provider's `provider_id` provided by BigCommerce after the provider [shares their provider details](https://developer.bigcommerce.com/api-docs/providers/tax#sharing-provider-details-with-bigcommerce). */
        readonly provider_id: string;
      };
    };
    readonly responses: {
      /** OK */
      readonly 200: {
        readonly content: {
          readonly "*/*": components["schemas"]["response-connection"];
          readonly "application/json": unknown;
        };
      };
      /** Provider does not exist */
      readonly 404: unknown;
    };
  };
  /**
   * Set the HTTP Basic Authentication credentials for the specified provider. The configured `username` and `password` will be used to authenticate each API request to the Tax Provider from the associated store.
   *
   * <div class="HubBlock--callout">
   * <div class="CalloutBlock--info">
   * <div class="HubBlock-content">
   *
   * > ### Note
   * > * This operation will be logged in [Store Logs](https://support.bigcommerce.com/s/article/Using-Store-Logs) under **Staff Actions**.
   * > * Requires **write** permissions on the **Information and Settings** [scope](https://developer.bigcommerce.com/api-docs/getting-started/authentication/rest-api-authentication#oauth-scopes).
   *
   * </div>
   * </div>
   * </div>
   */
  readonly "provider-connection-put": {
    readonly parameters: {
      readonly path: {
        /** The Tax Provider's `provider_id` provided by BigCommerce after the provider [shares their provider details](https://developer.bigcommerce.com/api-docs/providers/tax#sharing-provider-details-with-bigcommerce). */
        readonly provider_id: string;
      };
    };
    readonly responses: {
      /** OK */
      readonly 200: {
        readonly content: {
          readonly "application/json": components["schemas"]["response-connection"];
        };
      };
      /** Provider does not exist */
      readonly 404: unknown;
      /** Unprocessable Entity, will include a specific error message referencing the issue. */
      readonly 422: unknown;
    };
    /** Basic authentication information, associated with a merchant account on the third party tax provider's infrastructure. */
    readonly requestBody: {
      readonly content: {
        readonly "application/json": {
          /** Public identifying information representing a unique account on the tax provider's infrastructure. Should not contain any personal identifying information (e.g. a personal email address). */
          readonly username?: string;
          readonly password?: string;
        };
      };
    };
  };
  /**
   * Remove any previously set basic connection credentials for the specified provider. If the specified provider is the active tax provider on the store, the store's active tax provider will be reset to BigCommerce Manual Tax. It is suggested to call this endpoint during a single-click app [uninstall callback](https://developer.bigcommerce.com/api-docs/apps/guide/callbacks#uninstall-callback).
   *
   * <div class="HubBlock--callout">
   * <div class="CalloutBlock--info">
   * <div class="HubBlock-content">
   *
   * > ### Note
   * > * This operation will be logged in [Store Logs](https://support.bigcommerce.com/s/article/Using-Store-Logs) under **Staff Actions**.
   * > * Requires **write** permissions on the **Information and Settings** [scope](https://developer.bigcommerce.com/api-docs/getting-started/authentication/rest-api-authentication#oauth-scopes).
   *
   * </div>
   * </div>
   * </div>
   */
  readonly "provider-connection-delete": {
    readonly parameters: {
      readonly path: {
        /** The Tax Provider's `provider_id` provided by BigCommerce after the provider [shares their provider details](https://developer.bigcommerce.com/api-docs/providers/tax#sharing-provider-details-with-bigcommerce). */
        readonly provider_id: string;
      };
    };
    readonly responses: {
      /** OK */
      readonly 200: {
        readonly content: {
          readonly "*/*": components["schemas"]["response-connection"];
          readonly "application/json": unknown;
        };
      };
      /** Provider does not exist */
      readonly 404: unknown;
    };
  };
}
